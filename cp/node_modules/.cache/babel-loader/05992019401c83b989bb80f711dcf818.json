{"ast":null,"code":"var _jsxFileName = \"/home/mayakuntla/Videos/cp/src/Components/Tutorial/Terms_used.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useState } from 'react';\nimport './Terms_used.css';\nimport Image from '../../Images/Graph_transaction.jpg';\nimport Image1 from '../../Images/Relative_Frequency.png';\nimport ReactTooltip from \"react-tooltip\";\nimport AppContext from '../App_context';\nimport Box from '@material-ui/core/Box';\nimport Image3 from '../../Images/graph_transaction_example.png';\nimport Image4 from '../../Images/Cover.png';\nimport Image5 from '../../Images/Relative_Frequency_Formula.png';\nimport Image6 from '../../Images/Coverage_Support.png';\nimport Image7 from '../../Images/Overlap_Ratio.png';\nimport * as FaIcons from 'react-icons/fa';\nimport { array } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Terms_used(props) {\n  _s();\n\n  console.log(\"dfdf\");\n  const myContext = useContext(AppContext);\n  const [show_content, set_show_content] = useState(0);\n  const [show_terms, set_show_terms] = useState([0, 0, 0, 0, 0, 0]);\n\n  const go_to_set = index => {\n    let array = [...show_terms];\n    array[index] = !array[index];\n    set_show_terms(array);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: myContext.side ? \"terms_main_div_shrink\" : \"terms_main_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terms_heading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Terms Used\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"terms_horizontal_line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: myContext.side ? \"terms_content\" : \"terms_content_expand\",\n      children: [show_terms[0] == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"box2\",\n          onClick: () => go_to_set(0),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box_heading\",\n            children: \"Graph Transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box2_icon\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaPlus, {\n              onClick: () => go_to_set(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"box2\",\n          onClick: () => go_to_set(0),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box_heading\",\n            children: \"Graph Transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box2_icon\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaMinus, {\n              onClick: () => go_to_set(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terms_definition\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"para\",\n            children: [\"A graph transaction \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"G = (\", ' ', \"V, E, L, l\", ' ', \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 45\n            }, this), \" is a labeled,connected and undirected graph, where V is a set of vertices, E \\u2286 V\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 16\n            }, this), \" is a set of edges, L is a set of labels and l : V \\u222A E \\u2192 L, where l is a function for assigning labels to vertices and edges.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scp_definition\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"terms_example_image\",\n              src: Image3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_image_name\",\n              children: \"Fig. 1: (a) Sample chemical compound, (b) Equivalent graph model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true), show_terms[1] == 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        className: \"box2\",\n        onClick: () => go_to_set(1),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_heading\",\n          children: \"Subgraph Pattern\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box2_icon\",\n          children: /*#__PURE__*/_jsxDEV(FaIcons.FaPlus, {\n            onClick: () => go_to_set(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"box2\",\n          onClick: () => go_to_set(1),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box_heading\",\n            children: \"Subgraph Pattern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box2_icon\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaMinus, {\n              onClick: () => go_to_set(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terms_definition\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"para\",\n            children: \"Given a Graph Transactional Dataset D and the set \\u03A8 of all possible subgraphs over D, a subgraph pattern (SP ) is a set of subgraphs belonging to \\u03A8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true), show_terms[2] == 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        className: \"box2\",\n        onClick: () => go_to_set(2),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_heading\",\n          children: \"Cover Set of a Subgraph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box2_icon\",\n          children: /*#__PURE__*/_jsxDEV(FaIcons.FaPlus, {\n            onClick: () => go_to_set(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"box2\",\n          onClick: () => go_to_set(2),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box_heading\",\n            children: \"Cover Set of a Subgraph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box2_icon\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaMinus, {\n              onClick: () => go_to_set(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terms_definition\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"para\",\n              children: [\"A subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"j\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 37\n              }, this), \" is said to cover graph G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"i\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 74\n              }, this), \" from Graph Transactional Dataset if S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"j\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 124\n              }, this), \" exists in G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"i\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 148\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"para\",\n              children: [\"The Cover Set of subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"j\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 52\n              }, this), \" is defined as the set of all graph transactions covered by S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"j\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 125\n              }, this), \".It is denoted by CSet\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 159\n              }, this), \"(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"j\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 173\n              }, this), \" , D). Formally, CSet\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 5\n              }, this), \"(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"j\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), \" , D) = \", \"{G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"i\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 45\n              }, this), \" |cover(S \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"j\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 67\n              }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"i\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 83\n              }, this), \" ) = 1 \", \"&\", \" G i \\u2208 D\", \"}\", \". The Cover Set of SP (CSet\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 26\n              }, this), \" (SP, D)) is a set of all graph transactions covered by  atleast one Subgraph of SP .\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scp_definition_heading\",\n              id: \"example\",\n              children: \"Example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scp_definition\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"terms_example_image\",\n              src: Image4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_image_name\",\n              children: \"Fig. 2: Cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terms_example_definition\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Image,\n            className: \"example_image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image_name\",\n            children: \"Fig. 1: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"para_down_example\",\n            children: [\"Figure 1.a of above image is the Graph Transactional Dataset consisting of 10 graphs.In Figure 2(b), let SP be the set \", \"{S1, S2, S3}\", \". The RF values of S1, S2, and S3 are 0.3, 0.3, and 0.2 respectively. The coverage set of SP , CSet(SP ,D)=\", \"{(G1 ,G4 ,G5 ,G6 ,G7 ,G8 ,G10 }\", \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true), show_terms[3] == 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        className: \"box2\",\n        onClick: () => go_to_set(3),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_heading\",\n          children: \"Relative Frequency of a Subgraph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box2_icon\",\n          children: /*#__PURE__*/_jsxDEV(FaIcons.FaPlus, {\n            onClick: () => go_to_set(3)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"box2\",\n          onClick: () => go_to_set(3),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box_heading\",\n            children: \"Relative Frequency of a Subgraph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box2_icon\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaMinus, {\n              onClick: () => go_to_set(3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terms_definition\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"para\",\n              children: [\"Given Graph Transactional Data D and a subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"j\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 74\n              }, this), \" , we denote the percentage of graph transactions in D covered by S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"j\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 31\n              }, this), \" as Relative Frequency. Formula for computing Relative Frequency of Subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"j\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 56\n              }, this), \" in D is shown in figure 1.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"para\",\n              children: [\"Here, 0 \\u2264 RF\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 37\n              }, this), \" (S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"j\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 52\n              }, this), \" ,D) \\u2264 1. We can extract subgraphs of interest from D based on user-specified minRF\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 46\n              }, this), \" threshold.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scp_definition_heading\",\n              id: \"example\",\n              children: \"Example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scp_definition\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"terms_example_image\",\n              src: Image5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_image_name\",\n              children: [\"Fig. 1: Formula for Relative Frequency of Subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"j\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 95\n              }, this), \" in D \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terms_example_definition\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Image,\n            className: \"example_image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image_name\",\n            children: \"Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"para_down_example\",\n            children: [\"Consider graph transactional dataset D comprising of 10 graph transactions G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 130\n            }, this), \" to G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 2\n            }, this), \" , shown in Figure 2(a). Three subgraphs S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 57\n            }, this), \" , S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 73\n            }, this), \" and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 2\n            }, this), \" are shown in Figure 2(b). Here, S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 48\n            }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 2\n            }, this), \", G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 35\n            }, this), \" ; S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 52\n            }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 83\n            }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 99\n            }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 117\n            }, this), \" ; and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 2\n            }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 51\n            }, this), \" . The subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 80\n            }, this), \" is said to cover G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 11\n            }, this), \" since S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 31\n            }, this), \" \\u2286 G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 47\n            }, this), \" . Hence, cover(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 76\n            }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 92\n            }, this), \" )=1. Moreover, CSet(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), \" , D) = \", \"{G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 43\n            }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 59\n            }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 75\n            }, this), \" and RF\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 95\n            }, this), \" (S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 110\n            }, this), \" , D) = |Cset(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 137\n            }, this), \")|/D = 3/10 = 0.3. Similarly RF values of S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 26\n            }, this), \" , S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 2\n            }, this), \" are 0.3 and 0.2 respectively\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true), show_terms[4] == 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        className: \"box2\",\n        onClick: () => go_to_set(4),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_heading\",\n          children: \"Coverage Support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box2_icon\",\n          children: /*#__PURE__*/_jsxDEV(FaIcons.FaPlus, {\n            onClick: () => go_to_set(4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"box2\",\n          onClick: () => go_to_set(4),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box_heading\",\n            children: \"Coverage Support\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box2_icon\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaMinus, {\n              onClick: () => go_to_set(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terms_definition\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"para\",\n              children: [\"Given Graph Transactional Dataset D and a subgraph pattern SP, the coverage support of SP (CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 118\n              }, this), \" (SP, D)) is the percentage of graph transactions in D covered by at least one subgraph in SP .\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"para\",\n              children: [\"Here, 0 \\u2264 CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 37\n              }, this), \" (SP, D) \\u2264 1\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"para\",\n              children: [\"CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 27\n              }, this), \" (SP, D) = 1 when all of the graph transactions in D are covered by SP . Conversely, CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 23\n              }, this), \" (SP, D) = 0 when none of the graph transactions are covered by SP.A pattern SP is interesting with respect to coverage point of view if CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 6\n              }, this), \" (SP, D) \\u2265 minCS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 34\n              }, this), \" , where minCS g is a userdefined minimum Coverage Support threshold for graph transactions\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scp_definition_heading\",\n              id: \"example\",\n              children: \"Example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scp_definition\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"terms_example_image\",\n              src: Image6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_image_name\",\n              children: \"Fig. 1: Formula for Coverage Support of a Subgraph Pattern SP in D \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terms_example_definition\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Image,\n            className: \"example_image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image_name\",\n            children: \"Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"para_down_example\",\n            children: [\"Consider graph transactional dataset D comprising of 10 graph transactions G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 130\n            }, this), \" to G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 2\n            }, this), \" , shown in Figure 2(a). Three subgraphs S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 57\n            }, this), \" , S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 73\n            }, this), \" and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 2\n            }, this), \" are shown in Figure 2(b). Let Subgraph Pattern SP = \", \"{\", \" S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 74\n            }, this), \",S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 88\n            }, this), \",\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 101\n            }, this), \" \", \"}\", \" .Here, S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 128\n            }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 2\n            }, this), \", G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 35\n            }, this), \" ; S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 52\n            }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 83\n            }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 99\n            }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 117\n            }, this), \" ; and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 2\n            }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 33\n            }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 51\n            }, this), \" . The subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 80\n            }, this), \" is said to cover G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 11\n            }, this), \" since S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 31\n            }, this), \" \\u2286 G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 47\n            }, this), \" . Hence, cover(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 76\n            }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 92\n            }, this), \" )=1. Moreover, |CSet(SP , D)| / |D| = |\", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 41\n            }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 57\n            }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 73\n            }, this), \"}\", \" \\u222A \", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 100\n            }, this), \" ,G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 115\n            }, this), \",G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 130\n            }, this), \" \", \"}\", \" \\u222A \", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 157\n            }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 173\n            }, this), \"}\", \" | = 8 /10 = 0.8.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true), show_terms[5] == 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        className: \"box2\",\n        onClick: () => go_to_set(5),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_heading\",\n          children: \"Overlap Ratio of a Pattern X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box2_icon\",\n          children: /*#__PURE__*/_jsxDEV(FaIcons.FaPlus, {\n            onClick: () => go_to_set(5)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"box2\",\n          onClick: () => go_to_set(5),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box_heading\",\n            children: \"Overlap Ratio of a Pattern X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box2_icon\",\n            children: /*#__PURE__*/_jsxDEV(FaIcons.FaMinus, {\n              onClick: () => go_to_set(5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terms_definition\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"para\",\n              children: [\"Let X = \", \"{\", \"O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"p\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 39\n              }, this), \" , O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"q\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 55\n              }, this), \" ,. . . , O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"r\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 78\n              }, this), \" , O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 94\n              }, this), \" \", \"}\", \" be a pattern such that RF (O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"p\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 6\n              }, this), \" ) \\u2265 RF (O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"q\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 28\n              }, this), \") \\u2265 \\xB7 \\xB7 \\xB7 \\u2265 RF (O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"r\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 57\n              }, this), \" ) \\u2265 RF (O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 79\n              }, this), \"). (Here, the notations O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"p\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 16\n              }, this), \" , O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"q\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 32\n              }, this), \" , O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"r\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 48\n              }, this), \", and O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 67\n              }, this), \" represent Subgraph IDs.) The overlap ratio of a pattern X is defined as the ratio of the number of transactions common in CSet(X \\u2212\", \"{\", \"O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 52\n              }, this), \"}\", \") and CSet(O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 11\n              }, this), \") to CSet(O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 34\n              }, this), \").It is defined as shown in figure 1.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"para\",\n              children: \"For a pattern X, 0 \\u2264 OR(X) \\u2264 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"para\",\n              children: \"A pattern X is interesting if OR(X) \\u2264 maxOR, where maxOR is a user-defined maximum OR threshold.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scp_definition_heading\",\n              id: \"example\",\n              children: \"Example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scp_definition\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"terms_example_image\",\n              src: Image7\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_image_name\",\n              children: \"Fig. 1: Formula for Overlap Ratio of a pattern X.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terms_example_definition\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Image,\n            className: \"example_image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image_name\",\n            children: \"Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"para_down_example\",\n            children: [\"Consider graph transactional dataset D comprising of 10 graph transactions G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 130\n            }, this), \" to G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 2\n            }, this), \" , shown in Figure 2(a). Three subgraphs S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 57\n            }, this), \" , S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 73\n            }, this), \" and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 2\n            }, this), \" are shown in Figure 2(b). Let Subgraph Pattern SP = \", \"{\", \" S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 74\n            }, this), \",S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 88\n            }, this), \",\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 101\n            }, this), \" \", \"}\", \" .Here, S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 128\n            }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 2\n            }, this), \", G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 35\n            }, this), \" ; S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 52\n            }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 83\n            }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 99\n            }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 117\n            }, this), \" ; and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 2\n            }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 33\n            }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 51\n            }, this), \" . The subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 80\n            }, this), \" is said to cover G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 11\n            }, this), \" since S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 31\n            }, this), \" \\u2286 G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 47\n            }, this), \" . Hence, cover(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 76\n            }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 92\n            }, this), \" )=1. Moreover, |CSet(SP , D)| / |D| = |\", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 41\n            }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 57\n            }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 73\n            }, this), \"}\", \" \\u222A \", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 100\n            }, this), \" ,G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 115\n            }, this), \",G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 130\n            }, this), \" \", \"}\", \" \\u222A \", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 157\n            }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 173\n            }, this), \"}\", \" | = 8 /10 = 0.8.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Terms_used, \"pZg27tvrYv3vveVe+qzTzg+tb38=\");\n\n_c = Terms_used;\nexport default Terms_used;\n\nvar _c;\n\n$RefreshReg$(_c, \"Terms_used\");","map":{"version":3,"sources":["/home/mayakuntla/Videos/cp/src/Components/Tutorial/Terms_used.js"],"names":["React","useContext","useState","Image","Image1","ReactTooltip","AppContext","Box","Image3","Image4","Image5","Image6","Image7","FaIcons","array","Terms_used","props","console","log","myContext","show_content","set_show_content","show_terms","set_show_terms","go_to_set","index","side"],"mappings":"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","sourcesContent":["import React,{useContext} from 'react';\nimport { useState } from 'react';\nimport './Terms_used.css';\nimport Image from '../../Images/Graph_transaction.jpg';\nimport Image1 from '../../Images/Relative_Frequency.png';\nimport ReactTooltip from \"react-tooltip\";\nimport AppContext from '../App_context';\nimport Box from '@material-ui/core/Box';\nimport Image3 from '../../Images/graph_transaction_example.png';\nimport Image4 from '../../Images/Cover.png';\nimport Image5 from '../../Images/Relative_Frequency_Formula.png';\nimport Image6 from '../../Images/Coverage_Support.png';\nimport Image7 from '../../Images/Overlap_Ratio.png';\nimport * as FaIcons from 'react-icons/fa';\n\nimport { array } from 'prop-types';\n\n\nfunction Terms_used(props) {\n  console.log(\"dfdf\");\n  const myContext = useContext(AppContext);\n  const [show_content,set_show_content]= useState(0);\n  const [show_terms,set_show_terms]=useState([0,0,0,0,0,0]);\n  const go_to_set=(index)=>{\n    let array=[...show_terms];\n    array[index]=!array[index];\n    set_show_terms(array);\n\n  }\n  return (\n    <>\n       {/* <div className={myContext.side?\"mainheading\":\"mainheadingexpand\"}>Terms Used</div>\n\n    <div className={myContext.side ? \"main_card\" : \"main_card_expand\"}>\n      <div className=\"inside_div\">\n        <div className=\"mincs\">\n          <div className=\"side_heading\">Minimum Coverage Support</div>\n            <div className=\"content\">\n              <div className=\"table\">\n                <table>\n                  <tr>\n                    <th data-tip=\"Transaction Id\" data-for='toolTip1' data-place='top'>TID\n                    <ReactTooltip id=\"toolTip1\" className=\"tooltip\" /></th>\n                    <th>1</th>\n                    <th>2</th>\n                    <th>3</th>\n                    <th>4</th>\n                    <th>5</th>\n                    <th>6</th>\n                    <th>7</th>\n                    <th>8</th>\n                    <th>9</th>\n                    <th>10</th>\n                  </tr>\n                  <tr>\n                    <td>Items</td>\n                    <td>a,b,c</td>\n                    <td>a,c,e</td>\n                    <td>a,c,e</td>\n                    <td>a,c,d</td>\n                    <td>b,d,f</td>\n                    <td>b,d</td>\n                    <td>b,d</td>\n                    <td>b,e</td>\n                    <td>b,e</td>\n                    <td>a,b</td>\n                  </tr>\n                </table>\n              </div>\n              <div className=\"description\">\n                  <div className=\"subcontent\">\n                    <p className=\"sideheader\">Coverage Set of a Pattern</p>\n                    <p className=\"cont\">Coverage Set of a pattern X = {\"{\"} w {<sup>p</sup>},w {<sup>q</sup>},......w {<sup>r</sup>} {\"}\"} {\" \"}{\"1<=p<=q<=r<=n\"} where n is the number of Transactions is</p>\n                    <div className=\"setofpoints\">\n                      <li>Set of distinct TIDs that contain atleast item of X</li>\n                      <li>Denoted by CSET(X)</li>\n                      <li>CSET(X) = T(w{<sup>p</sup>}) U T(w{<sup>q</sup>}) U ..... U T(w{<sup>r</sup>})</li>\n                      <li>T(w{<sup>p</sup>}) = TIDs that contain item w{<sup>p</sup>}</li>\n                    </div>\n                    <p className=\"Example\">Example from the above table : </p>\n                    <p className=\"example_cont\">Coverage Set of Pattern X={\"{c,d}\"} is {\"{ 2,3,4,5,6,7 }\"}.</p>\n                    <p className=\"sideheader\">Coverage Support of a Pattern</p>\n                    <p className=\"cont\">Coverage Supportof a pattern X = {\"{\"} w {<sup>p</sup>},w {<sup>q</sup>},......w {<sup>r</sup>} {\"}\"} {\" \"}{\"1<=p<=q<=r<=n\"} where n is the number of Transactions is</p>\n                    <div className=\"setofpoints\">\n                      <li>Ratio of size of coverage set of pattern X to the number of total transactions.</li>\n                    </div>\n                    <p className=\"Example\">Example from the above table : </p>\n                    <p className=\"example_cont\">Coverage Support of Pattern X={\"{c,d}\"} = (Size of Coverage Set of X)/(Total number of Transactions) = 6/10 = 0.6</p>\n                  </div>\n              </div>\n            </div>\n        </div>\n      \n        <div className=\"minrf\">\n            <div className=\"side_heading\">Minimum Relative Frequency</div>\n            <div className=\"content\">\n              <div className=\"table\">\n                <table>\n                  <tr>\n                    <th data-tip=\"Transaction Id\" data-for='toolTip1' data-place='top'>TID\n                    <ReactTooltip id=\"toolTip1\" className=\"tooltip\" /></th>\n                    <th>1</th>\n                    <th>2</th>\n                    <th>3</th>\n                    <th>4</th>\n                    <th>5</th>\n                    <th>6</th>\n                    <th>7</th>\n                    <th>8</th>\n                    <th>9</th>\n                    <th>10</th>\n                  </tr>\n                  <tr>\n                    <td>Items</td>\n                    <td>a,b,c</td>\n                    <td>a,c,e</td>\n                    <td>a,c,e</td>\n                    <td>a,c,d</td>\n                    <td>b,d,f</td>\n                    <td>b,d</td>\n                    <td>b,d</td>\n                    <td>b,e</td>\n                    <td>b,e</td>\n                    <td>a,b</td>\n                  </tr>\n                </table>\n              </div>\n              <div className=\"description\">\n                  <div className=\"subcontent\">\n                    <p className=\"sideheader\">Relative Frequency of an item X is</p>\n                    <div className=\"setofpoints\">\n                      <li>Ratio of number of Transactions that contain the itex X to the total number of transactions</li>\n                    </div>\n                    <p className=\"Example\">Example from the above table : </p>\n                    <p className=\"example_cont\">Relative Frequency of an item 'a' is = (number of Transactions that contain 'a') / (Total Number of Transactions) = 5/10 = 0.5</p>\n                    \n                  </div>\n              </div>\n            </div>\n        </div>\n        <div className=\"maxor\">\n            <div className=\"side_heading\">Minimum Overlap Ratio</div>\n            <div className=\"content\">\n              <div className=\"table\">\n                <table>\n                  <tr>\n                    <th data-tip=\"Transaction Id\" data-for='toolTip1' data-place='top'>TID\n                    <ReactTooltip id=\"toolTip1\" className=\"tooltip\" /></th>\n                    <th>1</th>\n                    <th>2</th>\n                    <th>3</th>\n                    <th>4</th>\n                    <th>5</th>\n                    <th>6</th>\n                    <th>7</th>\n                    <th>8</th>\n                    <th>9</th>\n                    <th>10</th>\n                  </tr>\n                  <tr>\n                    <td>Items</td>\n                    <td>a,b,c</td>\n                    <td>a,c,e</td>\n                    <td>a,c,e</td>\n                    <td>a,c,d</td>\n                    <td>b,d,f</td>\n                    <td>b,d</td>\n                    <td>b,d</td>\n                    <td>b,e</td>\n                    <td>b,e</td>\n                    <td>a,b</td>\n                  </tr>\n                </table>\n              </div>\n              <div className=\"description\">\n                  <div className=\"subcontent\">\n                    <p className=\"sideheader\">Maximum Overlap Ratio of a pattern X = {\"{\"} w {<sup>p</sup>},w {<sup>q</sup>},......w {<sup>r</sup>} {\"}\"} {\" \"}{\"1<=p<=q<=r<=n\"} where n is the number of Transactions  and  |T(w{<sup>p</sup>})| {\">=\"} |T(w{<sup>q</sup>})| {\">=\"} .....{\">=\"} |T(w{<sup>r</sup>})| where |T(w{<sup>q</sup>})| is number of TIDs containing item w{<sup>q</sup>} is</p>\n                    <div className=\"setofpoints\">\n                      <li>If w{<sup>r</sup>}  is the last item added to X , the overlap ratio is defined as Ratio of Common Transactions in X-w{<sup>r</sup>} and w{<sup>r</sup>} to the number of Transactions containing item w{<sup>r</sup>}.</li>\n                      <li>The lesser the overlap ratio, the more will be the coverage support.</li>\n                      <li>The overlap ratio r is 0{\"<=\"}r{\"<=\"}1</li>\n                    </div>\n                    <p className=\"Example\">Example from the above table : </p>\n                    <p className=\"example_cont\">Overlap Ratio of X = {\"{ b,a}\"} is = (number of Transactions common in (b) and (a)) / (Number of Transactions containing a) = 2/5 = 0.4</p>\n                    \n                  </div>\n              </div>\n            </div>\n        </div>\n      </div>\n\n  </div>*/}\n    <div className={myContext.side ? \"terms_main_div_shrink\" : \"terms_main_div\"}>\n      <div className=\"terms_heading\">\n        <div>Terms Used</div>\n      </div>\n      <hr className=\"terms_horizontal_line\"/>\n      {/*<div className=\"terms_list_of_contents\">\n        <div>\n        {show_content ? \n          <Box className=\"terms_box1\">\n            <div className=\"dropdown_heading\">Contents [<div className=\"show_hide\" onClick={()=>set_show_content(!show_content)}>Hide</div> ] </div>\n            <div className=\"terms_list_of_contents\">\n              <div><a href=\"#def\">1. Graph Transaction</a></div>\n              <div><a href=\"#example\">2. Minimum Relative Frequency</a></div>\n              <div><a href=\"#framework\">3. Minimum Coverage Support </a></div>\n              <div><a href=\"#references\">4. Maximum Overlap Ratio</a></div>\n            </div>\n          </Box> :\n          <Box className=\"terms_box1\">\n            <div className=\"dropdown_heading\">Contents [<div className=\"show_hide\" onClick={()=>set_show_content(!show_content)}>Show</div>]</div>\n          </Box>\n        }\n      </div>\n      </div>*/}\n  </div>\n  <div className={myContext.side ? \"terms_content\" : \"terms_content_expand\"}>\n    \n    {show_terms[0]==0 ?\n    <div>\n      <Box className=\"box2\" onClick={()=>go_to_set(0)}>\n         <div className=\"box_heading\">Graph Transaction</div>\n        <div className=\"box2_icon\">\n          <FaIcons.FaPlus onClick={()=>go_to_set(0)}/>\n        </div>\n      \n      </Box>\n    </div> :\n    <>\n    <Box className=\"box2\" onClick={()=>go_to_set(0)}> \n    <div className=\"box_heading\">\n      Graph Transaction\n    </div>\n    <div className=\"box2_icon\">\n          <FaIcons.FaMinus onClick={()=>go_to_set(0)}/>\n        </div>\n    </Box>\n    <div className=\"terms_definition\">\n    <p className=\"para\">A graph transaction <i>G = ({' '}V, E, L, l{' '})</i> is a labeled,connected and undirected graph, where V is a set of\nvertices, E ⊆ V<sub>2</sub> is a set of edges, L is a set of labels and l : V ∪ E → L, where l is a function for assigning\nlabels to vertices and edges.</p>\n        <div className=\"scp_definition\">\n        <img className=\"terms_example_image\" src={Image3}></img>\n        <div className=\"terms_image_name\">Fig. 1: (a) Sample chemical compound, (b) Equivalent graph model</div>\n        </div>\n    </div>\n    </>\n    }\n    {show_terms[1]==0 ?\n    <Box className=\"box2\" onClick={()=>go_to_set(1)}>\n    <div className=\"box_heading\">Subgraph Pattern</div>\n   <div className=\"box2_icon\">\n     <FaIcons.FaPlus onClick={()=>go_to_set(1)}/>\n   </div>\n \n </Box>:\n    <>\n    <Box className=\"box2\" onClick={()=>go_to_set(1)}>\n    <div className=\"box_heading\">\n      Subgraph Pattern\n    </div>\n    <div className=\"box2_icon\">\n          <FaIcons.FaMinus onClick={()=>go_to_set(1)}/>\n        </div>\n    </Box>\n    <div className=\"terms_definition\">\n    <p className=\"para\">Given a Graph Transactional Dataset D and the set Ψ of all possible subgraphs over D, a subgraph pattern (SP ) is a set\nof subgraphs belonging to Ψ</p>\n        \n    </div>\n    </>\n    }\n    {show_terms[2]==0 ?\n    <Box className=\"box2\" onClick={()=>go_to_set(2)}>\n    <div className=\"box_heading\">Cover Set of a Subgraph</div>\n   <div className=\"box2_icon\">\n     <FaIcons.FaPlus onClick={()=>go_to_set(2)}/>\n   </div>\n \n </Box>:\n    <>\n    <Box className=\"box2\" onClick={()=>go_to_set(2)}>\n    <div className=\"box_heading\">\n      Cover Set of a Subgraph\n    </div>\n    <div className=\"box2_icon\">\n          <FaIcons.FaMinus onClick={()=>go_to_set(2)}/>\n        </div>\n    </Box>\n    <div className=\"terms_definition\">\n      <div>\n    <p className=\"para\">A subgraph S<sub>j</sub> is said to cover graph G<sub>i</sub> from Graph Transactional Dataset if S<sub>j</sub> exists in G<sub>i</sub>.</p>\n    <p className=\"para\">The Cover Set of subgraph S<sub>j</sub> is defined as the set of all graph transactions covered by S<sub>j</sub>.It is denoted by CSet<sub>g</sub>(S<sub>j</sub> , D). Formally,\nCSet<sub>g</sub>(S<sub>j</sub> , D) = {\"{G\"}<sub>i</sub> |cover(S <sub>j</sub> , G<sub>i</sub> ) = 1 {\"&\"} G i ∈ D{\"}\"}.\nThe Cover Set of SP (CSet<sub>g</sub> (SP, D)) is a set of all graph transactions covered by  atleast one Subgraph of SP .\n</p>\n          <div className=\"scp_definition_heading\" id=\"example\">\n              Example\n          </div>\n          {/*<div className=\"scp_definition\">\n                    <img src={Image} className=\"example_image\"></img>\n                    <div className=\"image_name\">Fig. 1: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2</div>\n                    <p className=\"para\">Figure 1.a of above image is the Graph Transactional Dataset consisting of 10 graphs.In Figure 2(b), let SP be the set {\"{S1, S2, S3}\"}. The RF values of S1, S2, and S3 are 0.3, 0.3, and 0.2 respectively. The coverage set of SP , CSet(SP ,D)=\n                        {\"{(G1 ,G4 ,G5 ,G6 ,G7 ,G8 ,G10 }\"}.</p>\n    </div>*/}\n        </div>\n        <div className=\"scp_definition\">\n        <img className=\"terms_example_image\" src={Image4}></img>\n        <div className=\"terms_image_name\">Fig. 2: Cover</div>\n        </div>\n      </div>\n      <div className=\"terms_example_definition\">\n                    <img src={Image} className=\"example_image\"></img>\n                    <div className=\"image_name\">Fig. 1: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2</div>\n                    <p className=\"para_down_example\">Figure 1.a of above image is the Graph Transactional Dataset consisting of 10 graphs.In Figure 2(b), let SP be the set {\"{S1, S2, S3}\"}. The RF values of S1, S2, and S3 are 0.3, 0.3, and 0.2 respectively. The coverage set of SP , CSet(SP ,D)=\n                        {\"{(G1 ,G4 ,G5 ,G6 ,G7 ,G8 ,G10 }\"}.</p>\n                </div>\n    \n    </>\n    }\n    {show_terms[3]==0 ?\n    <Box className=\"box2\" onClick={()=>go_to_set(3)}>\n    <div className=\"box_heading\">Relative Frequency of a Subgraph</div>\n   <div className=\"box2_icon\">\n     <FaIcons.FaPlus onClick={()=>go_to_set(3)}/>\n   </div>\n \n </Box>:\n    <>\n    <Box className=\"box2\" onClick={()=>go_to_set(3)}>\n    <div className=\"box_heading\">\n      Relative Frequency of a Subgraph\n    </div>\n    <div className=\"box2_icon\">\n          <FaIcons.FaMinus onClick={()=>go_to_set(3)}/>\n        </div>\n    </Box>\n    <div className=\"terms_definition\">\n      <div>\n    <p className=\"para\">Given Graph Transactional Data D and a subgraph S<sub>j</sub> , we denote the percentage of graph\ntransactions in D covered by S<sub>j</sub> as Relative Frequency.\n Formula for computing Relative Frequency of Subgraph S<sub>j</sub> in D is shown in figure 1.</p>\n    <p className=\"para\">Here, 0 ≤ RF<sub>g</sub> (S<sub>j</sub> ,D) ≤ 1. We can extract subgraphs of\ninterest from D based on user-specified minRF<sub>g</sub> threshold.</p>\n          <div className=\"scp_definition_heading\" id=\"example\">\n              Example\n          </div>\n         {/*<div className=\"scp_definition\">\n                    <img src={Image} className=\"example_image\"></img>\n                    <div className=\"image_name\">Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2</div>\n                    <p className=\"para\">Consider graph transactional dataset D comprising of 10 graph transactions G<sub>1</sub> to\nG<sub>10</sub> , shown in Figure 2(a). Three subgraphs S<sub>1</sub> , S<sub>2</sub> and\nS<sub>3</sub> are shown in Figure 2(b). Here, S<sub>1</sub> is a subgraph of\nG<sub>1</sub>, G<sub>6</sub> and G<sub>10</sub> ; S<sub>2</sub> is a subgraph of G<sub>5</sub> , G<sub>7</sub> and G<sub>8</sub> ; and\nS<sub>3</sub> is a subgraph of G<sub>4</sub> and G<sub>7</sub> . The subgraph S<sub>1</sub> is said\nto cover G<sub>1</sub> since S<sub>1</sub> ⊆ G<sub>1</sub> . Hence, cover(S<sub>1</sub> , G<sub>1</sub> )=1.\nMoreover, CSet(S<sub>1</sub> , D) = {\"{G\"}<sub>1</sub> ,G <sub>6</sub> ,G <sub>10</sub> and RF<sub>g</sub> (S<sub>1</sub> , D) = |Cset(S<sub>1</sub>)|/D = 3/10 = 0.3.\n Similarly RF values of S<sub>2</sub> ,\nS<sub>3</sub> are 0.3 and 0.2 respectively</p>\n    </div>*/}\n        </div>\n        <div className=\"scp_definition\">\n        <img className=\"terms_example_image\" src={Image5}></img>\n        <div className=\"terms_image_name\">Fig. 1: Formula for Relative Frequency of Subgraph S<sub>j</sub> in D </div>\n        </div>\n      </div>\n      <div className=\"terms_example_definition\">\n                    <img src={Image} className=\"example_image\"></img>\n                    <div className=\"image_name\">Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2</div>\n                    <p className=\"para_down_example\">Consider graph transactional dataset D comprising of 10 graph transactions G<sub>1</sub> to\nG<sub>10</sub> , shown in Figure 2(a). Three subgraphs S<sub>1</sub> , S<sub>2</sub> and\nS<sub>3</sub> are shown in Figure 2(b). Here, S<sub>1</sub> is a subgraph of\nG<sub>1</sub>, G<sub>6</sub> and G<sub>10</sub> ; S<sub>2</sub> is a subgraph of G<sub>5</sub> , G<sub>7</sub> and G<sub>8</sub> ; and\nS<sub>3</sub> is a subgraph of G<sub>4</sub> and G<sub>7</sub> . The subgraph S<sub>1</sub> is said\nto cover G<sub>1</sub> since S<sub>1</sub> ⊆ G<sub>1</sub> . Hence, cover(S<sub>1</sub> , G<sub>1</sub> )=1.\nMoreover, CSet(S<sub>1</sub> , D) = {\"{G\"}<sub>1</sub> ,G <sub>6</sub> ,G <sub>10</sub> and RF<sub>g</sub> (S<sub>1</sub> , D) = |Cset(S<sub>1</sub>)|/D = 3/10 = 0.3.\n Similarly RF values of S<sub>2</sub> ,\nS<sub>3</sub> are 0.3 and 0.2 respectively</p>\n                </div>\n\n    \n    </>\n    }\n    {show_terms[4]==0 ?\n    <Box className=\"box2\" onClick={()=>go_to_set(4)}>\n    <div className=\"box_heading\">Coverage Support</div>\n   <div className=\"box2_icon\">\n     <FaIcons.FaPlus onClick={()=>go_to_set(4)}/>\n   </div>\n \n </Box>:\n    <>\n    <Box className=\"box2\" onClick={()=>go_to_set(4)}>\n    <div className=\"box_heading\">\n      Coverage Support\n    </div>\n    <div className=\"box2_icon\">\n          <FaIcons.FaMinus onClick={()=>go_to_set(4)}/>\n        </div>\n    </Box>\n    <div className=\"terms_definition\">\n      <div>\n    <p className=\"para\">Given Graph Transactional Dataset D and a subgraph pattern SP, the coverage support of SP (CS<sub>g</sub> (SP, D)) is the percentage of graph\ntransactions in D covered by at least one subgraph in\nSP .</p>\n    <p className=\"para\">Here, 0 ≤ CS<sub>g</sub> (SP, D) ≤ 1</p>\n    <p className=\"para\">CS<sub>g</sub> (SP, D) = 1\nwhen all of the graph transactions in D are covered\nby SP . Conversely, CS<sub>g</sub> (SP, D) = 0 when none of the\ngraph transactions are covered by SP.A pattern SP is interesting with respect to coverage point of view\nif CS<sub>g</sub> (SP, D) ≥ minCS<sub>g</sub> , where minCS g is a userdefined minimum Coverage Support threshold for graph\ntransactions</p>\n          <div className=\"scp_definition_heading\" id=\"example\">\n              Example\n          </div>\n         {/* <div className=\"scp_definition\">\n                    <img src={Image} className=\"example_image\"></img>\n                    <div className=\"image_name\">Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2</div>\n                    <p className=\"para\">Consider graph transactional dataset D comprising of 10 graph transactions G<sub>1</sub> to\nG<sub>10</sub> , shown in Figure 2(a). Three subgraphs S<sub>1</sub> , S<sub>2</sub> and\nS<sub>3</sub> are shown in Figure 2(b). Let Subgraph Pattern SP = {\"{\"} S<sub>1</sub>,S<sub>2</sub>,<sub>3</sub> {\"}\"} .Here, S<sub>1</sub> is a subgraph of\nG<sub>1</sub>, G<sub>6</sub> and G<sub>10</sub> ; S<sub>2</sub> is a subgraph of G<sub>5</sub> , G<sub>7</sub> and G<sub>8</sub> ; and\nS<sub>3</sub> is a subgraph of G<sub>4</sub> and G<sub>7</sub> . The subgraph S<sub>1</sub> is said\nto cover G<sub>1</sub> since S<sub>1</sub> ⊆ G<sub>1</sub> . Hence, cover(S<sub>1</sub> , G<sub>1</sub> )=1.\nMoreover, |CSet(SP , D)| / |D| = |{\"{\"}G<sub>1</sub> ,G <sub>6</sub> ,G <sub>10</sub>{\"}\"} ∪ {\"{\"}G<sub>5</sub> ,G<sub>7</sub>,G <sub>8</sub> {\"}\"} ∪ {\"{\"}G<sub>4</sub> ,G <sub>7</sub>{\"}\"} | = 8 /10 = 0.8.\n </p>\n    </div>*/}\n        </div>\n        <div className=\"scp_definition\">\n        <img className=\"terms_example_image\" src={Image6}></img>\n        <div className=\"terms_image_name\">Fig. 1: Formula for Coverage Support of a Subgraph Pattern SP in D </div>\n        </div>\n      </div>\n      <div className=\"terms_example_definition\">\n                    <img src={Image} className=\"example_image\"></img>\n                    <div className=\"image_name\">Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2</div>\n                    <p className=\"para_down_example\">Consider graph transactional dataset D comprising of 10 graph transactions G<sub>1</sub> to\nG<sub>10</sub> , shown in Figure 2(a). Three subgraphs S<sub>1</sub> , S<sub>2</sub> and\nS<sub>3</sub> are shown in Figure 2(b). Let Subgraph Pattern SP = {\"{\"} S<sub>1</sub>,S<sub>2</sub>,<sub>3</sub> {\"}\"} .Here, S<sub>1</sub> is a subgraph of\nG<sub>1</sub>, G<sub>6</sub> and G<sub>10</sub> ; S<sub>2</sub> is a subgraph of G<sub>5</sub> , G<sub>7</sub> and G<sub>8</sub> ; and\nS<sub>3</sub> is a subgraph of G<sub>4</sub> and G<sub>7</sub> . The subgraph S<sub>1</sub> is said\nto cover G<sub>1</sub> since S<sub>1</sub> ⊆ G<sub>1</sub> . Hence, cover(S<sub>1</sub> , G<sub>1</sub> )=1.\nMoreover, |CSet(SP , D)| / |D| = |{\"{\"}G<sub>1</sub> ,G <sub>6</sub> ,G <sub>10</sub>{\"}\"} ∪ {\"{\"}G<sub>5</sub> ,G<sub>7</sub>,G <sub>8</sub> {\"}\"} ∪ {\"{\"}G<sub>4</sub> ,G <sub>7</sub>{\"}\"} | = 8 /10 = 0.8.\n </p>\n    </div>\n      \n    \n    </>\n    }\n    {show_terms[5]==0 ?\n    <Box className=\"box2\" onClick={()=>go_to_set(5)}>\n    <div className=\"box_heading\">Overlap Ratio of a Pattern X</div>\n   <div className=\"box2_icon\">\n     <FaIcons.FaPlus onClick={()=>go_to_set(5)}/>\n   </div>\n \n </Box>:\n    <>\n    <Box className=\"box2\" onClick={()=>go_to_set(5)}>\n    <div className=\"box_heading\">\n      Overlap Ratio of a Pattern X\n    </div>\n    <div className=\"box2_icon\">\n          <FaIcons.FaMinus onClick={()=>go_to_set(5)}/>\n        </div>\n    </Box>\n    <div className=\"terms_definition\">\n      <div>\n    <p className=\"para\">Let X = {\"{\"}O<sub>p</sub> , O<sub>q</sub> ,. . . , O<sub>r</sub> , O<sub>s</sub> {\"}\"} be a pattern such that\nRF (O<sub>p</sub> ) ≥ RF (O<sub>q</sub>) ≥ · · · ≥ RF (O<sub>r</sub> ) ≥ RF (O<sub>s</sub>). (Here,\nthe notations O<sub>p</sub> , O<sub>q</sub> , O<sub>r</sub>, and O<sub>s</sub> represent Subgraph IDs.) The\noverlap ratio of a pattern X is defined as the ratio of\nthe number of transactions common in CSet(X −{\"{\"}O<sub>s</sub>{\"}\"})\nand CSet(O<sub>s</sub>) to CSet(O<sub>s</sub>).It is defined as shown in figure 1.</p>\n    <p className=\"para\">For a pattern X, 0 ≤ OR(X) ≤ 1</p>\n    <p className=\"para\">A pattern X\nis interesting if OR(X) ≤ maxOR, where maxOR is\na user-defined maximum OR threshold.</p>\n          <div className=\"scp_definition_heading\" id=\"example\">\n              Example\n          </div>\n         {/* <div className=\"scp_definition\">\n                    <img src={Image} className=\"example_image\"></img>\n                    <div className=\"image_name\">Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2</div>\n                    <p className=\"para\">Consider graph transactional dataset D comprising of 10 graph transactions G<sub>1</sub> to\nG<sub>10</sub> , shown in Figure 2(a). Three subgraphs S<sub>1</sub> , S<sub>2</sub> and\nS<sub>3</sub> are shown in Figure 2(b). Let Subgraph Pattern SP = {\"{\"} S<sub>1</sub>,S<sub>2</sub>,<sub>3</sub> {\"}\"} .Here, S<sub>1</sub> is a subgraph of\nG<sub>1</sub>, G<sub>6</sub> and G<sub>10</sub> ; S<sub>2</sub> is a subgraph of G<sub>5</sub> , G<sub>7</sub> and G<sub>8</sub> ; and\nS<sub>3</sub> is a subgraph of G<sub>4</sub> and G<sub>7</sub> . The subgraph S<sub>1</sub> is said\nto cover G<sub>1</sub> since S<sub>1</sub> ⊆ G<sub>1</sub> . Hence, cover(S<sub>1</sub> , G<sub>1</sub> )=1.\nMoreover, |CSet(SP , D)| / |D| = |{\"{\"}G<sub>1</sub> ,G <sub>6</sub> ,G <sub>10</sub>{\"}\"} ∪ {\"{\"}G<sub>5</sub> ,G<sub>7</sub>,G <sub>8</sub> {\"}\"} ∪ {\"{\"}G<sub>4</sub> ,G <sub>7</sub>{\"}\"} | = 8 /10 = 0.8.\n </p>\n</div>*/}\n        </div>\n        <div className=\"scp_definition\">\n        <img className=\"terms_example_image\" src={Image7}></img>\n        <div className=\"terms_image_name\">Fig. 1: Formula for Overlap Ratio of a pattern X.</div>\n        </div>\n      </div>\n      <div className=\"terms_example_definition\">\n                    <img src={Image} className=\"example_image\"></img>\n                    <div className=\"image_name\">Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2</div>\n                    <p className=\"para_down_example\">Consider graph transactional dataset D comprising of 10 graph transactions G<sub>1</sub> to\nG<sub>10</sub> , shown in Figure 2(a). Three subgraphs S<sub>1</sub> , S<sub>2</sub> and\nS<sub>3</sub> are shown in Figure 2(b). Let Subgraph Pattern SP = {\"{\"} S<sub>1</sub>,S<sub>2</sub>,<sub>3</sub> {\"}\"} .Here, S<sub>1</sub> is a subgraph of\nG<sub>1</sub>, G<sub>6</sub> and G<sub>10</sub> ; S<sub>2</sub> is a subgraph of G<sub>5</sub> , G<sub>7</sub> and G<sub>8</sub> ; and\nS<sub>3</sub> is a subgraph of G<sub>4</sub> and G<sub>7</sub> . The subgraph S<sub>1</sub> is said\nto cover G<sub>1</sub> since S<sub>1</sub> ⊆ G<sub>1</sub> . Hence, cover(S<sub>1</sub> , G<sub>1</sub> )=1.\nMoreover, |CSet(SP , D)| / |D| = |{\"{\"}G<sub>1</sub> ,G <sub>6</sub> ,G <sub>10</sub>{\"}\"} ∪ {\"{\"}G<sub>5</sub> ,G<sub>7</sub>,G <sub>8</sub> {\"}\"} ∪ {\"{\"}G<sub>4</sub> ,G <sub>7</sub>{\"}\"} | = 8 /10 = 0.8.\n </p>\n</div>\n      \n      \n    \n    </>\n    }\n  \n   \n  </div>\n  </>\n  \n  );\n}\n\nexport default Terms_used;"]},"metadata":{},"sourceType":"module"}