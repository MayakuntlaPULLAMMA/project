{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/* FileSaver.js\r\n * A saveAs() FileSaver implementation.\r\n *\r\n * By Eli Grey, http://eligrey.com\r\n * ES6ified by Cole Chamberlain, https://github.com/cchamberlain\r\n *\r\n * License: MIT\r\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\r\n */\n\n/*global self */\n\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\n\nvar saveAs = exports.saveAs = window.saveAs || function (view) {\n  // IE <10 is explicitly unsupported\n  if (typeof navigator !== 'undefined' && /MSIE [1-9]\\./.test(navigator.userAgent)) return;\n  var doc = view.document; // only get URL when necessary in case Blob.js hasn't overridden it yet\n\n  var get_URL = function get_URL() {\n    return view.URL || view.webkitURL || view;\n  };\n\n  var save_link = doc.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n  var can_use_save_link = ('download' in save_link);\n\n  var click = function click(node) {\n    var event = new MouseEvent('click');\n    node.dispatchEvent(event);\n  };\n\n  var is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent);\n  var webkit_req_fs = view.webkitRequestFileSystem;\n  var req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem;\n\n  var throw_outside = function throw_outside(ex) {\n    (view.setImmediate || view.setTimeout)(function () {\n      throw ex;\n    }, 0);\n  };\n\n  var force_saveable_type = 'application/octet-stream';\n  var fs_min_size = 0; // the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\n  var arbitrary_revoke_timeout = 1000 * 40; // in ms\n\n  var revoke = function revoke(file) {\n    var revoker = function revoker() {\n      if (typeof file === 'string') // file is an object URL\n        get_URL().revokeObjectURL(file);else // file is a File\n        file.remove();\n    };\n    /* // Take note W3C:\r\n    var\r\n      uri = typeof file === \"string\" ? file : file.toURL()\r\n    , revoker = function(evt) {\r\n      // idealy DownloadFinishedEvent.data would be the URL requested\r\n      if (evt.data === uri) {\r\n        if (typeof file === \"string\") { // file is an object URL\r\n          get_URL().revokeObjectURL(file);\r\n        } else { // file is a File\r\n          file.remove();\r\n        }\r\n      }\r\n    }\r\n    ;\r\n    view.addEventListener(\"downloadfinished\", revoker);\r\n    */\n\n\n    setTimeout(revoker, arbitrary_revoke_timeout);\n  };\n\n  var dispatch = function dispatch(filesaver, event_types, event) {\n    event_types = [].concat(event_types);\n    var i = event_types.length;\n\n    while (i--) {\n      var listener = filesaver['on' + event_types[i]];\n\n      if (typeof listener === 'function') {\n        try {\n          listener.call(filesaver, event || filesaver);\n        } catch (ex) {\n          throw_outside(ex);\n        }\n      }\n    }\n  };\n\n  var auto_bom = function auto_bom(blob) {\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) return new Blob(['ï»¿', blob], {\n      type: blob.type\n    });\n    return blob;\n  };\n\n  var FileSaver = function FileSaver(blob, name, no_auto_bom) {\n    _classCallCheck(this, FileSaver);\n\n    if (!no_auto_bom) blob = auto_bom(blob); // First try a.download, then web filesystem, then object URLs\n\n    var filesaver = this,\n        type = blob.type,\n        blob_changed = false,\n        object_url,\n        target_view,\n        dispatch_all = function dispatch_all() {\n      dispatch(filesaver, 'writestart progress write writeend'.split(' '));\n    } // on any filesys errors revert to saving with object URLs\n    ,\n        fs_error = function fs_error() {\n      if (target_view && is_safari && typeof FileReader !== 'undefined') {\n        // Safari doesn't allow downloading of blob urls\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n          var base64Data = reader.result;\n          target_view.location.href = 'data:attachment/file' + base64Data.slice(base64Data.search(/[,;]/));\n          filesaver.readyState = filesaver.DONE;\n          dispatch_all();\n        };\n\n        reader.readAsDataURL(blob);\n        filesaver.readyState = filesaver.INIT;\n        return;\n      } // don't create more object URLs than needed\n\n\n      if (blob_changed || !object_url) {\n        object_url = get_URL().createObjectURL(blob);\n      }\n\n      if (target_view) {\n        target_view.location.href = object_url;\n      } else {\n        var new_tab = view.open(object_url, '_blank');\n\n        if (new_tab === undefined && is_safari) {\n          //Apple do not allow window.open, see http://bit.ly/1kZffRI\n          view.location.href = object_url;\n        }\n      }\n\n      filesaver.readyState = filesaver.DONE;\n      dispatch_all();\n      revoke(object_url);\n    },\n        abortable = function abortable(func) {\n      return function () {\n        if (filesaver.readyState !== filesaver.DONE) {\n          return func.apply(this, arguments);\n        }\n      };\n    },\n        create_if_not_found = {\n      create: true,\n      exclusive: false\n    },\n        slice;\n\n    filesaver.readyState = filesaver.INIT;\n\n    if (!name) {\n      name = 'download';\n    }\n\n    if (can_use_save_link) {\n      object_url = get_URL().createObjectURL(blob);\n      setTimeout(function () {\n        save_link.href = object_url;\n        save_link.download = name;\n        click(save_link);\n        dispatch_all();\n        revoke(object_url);\n        filesaver.readyState = filesaver.DONE;\n      });\n      return;\n    } // Object and web filesystem URLs have a problem saving in Google Chrome when\n    // viewed in a tab, so I force save with application/octet-stream\n    // http://code.google.com/p/chromium/issues/detail?id=91158\n    // Update: Google errantly closed 91158, I submitted it again:\n    // https://code.google.com/p/chromium/issues/detail?id=389642\n\n\n    if (view.chrome && type && type !== force_saveable_type) {\n      slice = blob.slice || blob.webkitSlice;\n      blob = slice.call(blob, 0, blob.size, force_saveable_type);\n      blob_changed = true;\n    } // Since I can't be sure that the guessed media type will trigger a download\n    // in WebKit, I append .download to the filename.\n    // https://bugs.webkit.org/show_bug.cgi?id=65440\n\n\n    if (webkit_req_fs && name !== 'download') {\n      name += '.download';\n    }\n\n    if (type === force_saveable_type || webkit_req_fs) {\n      target_view = view;\n    }\n\n    if (!req_fs) {\n      fs_error();\n      return;\n    }\n\n    fs_min_size += blob.size;\n    req_fs(view.TEMPORARY, fs_min_size, abortable(function (fs) {\n      fs.root.getDirectory('saved', create_if_not_found, abortable(function (dir) {\n        var save = function save() {\n          dir.getFile(name, create_if_not_found, abortable(function (file) {\n            file.createWriter(abortable(function (writer) {\n              writer.onwriteend = function (event) {\n                target_view.location.href = file.toURL();\n                filesaver.readyState = filesaver.DONE;\n                dispatch(filesaver, 'writeend', event);\n                revoke(file);\n              };\n\n              writer.onerror = function () {\n                var error = writer.error;\n\n                if (error.code !== error.ABORT_ERR) {\n                  fs_error();\n                }\n              };\n\n              'writestart progress write abort'.split(' ').forEach(function (event) {\n                writer['on' + event] = filesaver['on' + event];\n              });\n              writer.write(blob);\n\n              filesaver.abort = function () {\n                writer.abort();\n                filesaver.readyState = filesaver.DONE;\n              };\n\n              filesaver.readyState = filesaver.WRITING;\n            }), fs_error);\n          }), fs_error);\n        };\n\n        dir.getFile(name, {\n          create: false\n        }, abortable(function (file) {\n          // delete file if it already exists\n          file.remove();\n          save();\n        }), abortable(function (ex) {\n          if (ex.code === ex.NOT_FOUND_ERR) {\n            save();\n          } else {\n            fs_error();\n          }\n        }));\n      }), fs_error);\n    }), fs_error);\n  };\n\n  var FS_proto = FileSaver.prototype;\n\n  var saveAs = function saveAs(blob, name, no_auto_bom) {\n    return new FileSaver(blob, name, no_auto_bom);\n  }; // IE 10+ (native saveAs)\n\n\n  if (typeof navigator !== 'undefined' && navigator.msSaveOrOpenBlob) {\n    return function (blob, name, no_auto_bom) {\n      if (!no_auto_bom) blob = auto_bom(blob);\n      return navigator.msSaveOrOpenBlob(blob, name || 'download');\n    };\n  }\n\n  FS_proto.abort = function () {\n    var filesaver = this;\n    filesaver.readyState = filesaver.DONE;\n    dispatch(filesaver, 'abort');\n  };\n\n  FS_proto.readyState = FS_proto.INIT = 0;\n  FS_proto.WRITING = 1;\n  FS_proto.DONE = 2;\n  FS_proto.error = FS_proto.onwritestart = FS_proto.onprogress = FS_proto.onwrite = FS_proto.onabort = FS_proto.onerror = FS_proto.onwriteend = null;\n  return saveAs;\n}(typeof self !== 'undefined' && self || typeof window !== 'undefined' && window || undefined.content); // `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\n\nexports.default = saveAs;","map":{"version":3,"sources":["/home/mayakuntla/Videos/cp/node_modules/save-as/lib/index.js"],"names":["Object","defineProperty","exports","value","_classCallCheck","instance","Constructor","TypeError","saveAs","window","view","navigator","test","userAgent","doc","document","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","click","node","event","MouseEvent","dispatchEvent","is_safari","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","setTimeout","force_saveable_type","fs_min_size","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","remove","dispatch","filesaver","event_types","concat","i","length","listener","call","auto_bom","blob","type","Blob","FileSaver","name","no_auto_bom","blob_changed","object_url","target_view","dispatch_all","split","fs_error","FileReader","reader","onloadend","base64Data","result","location","href","slice","search","readyState","DONE","readAsDataURL","INIT","createObjectURL","new_tab","open","undefined","abortable","func","apply","arguments","create_if_not_found","create","exclusive","download","chrome","webkitSlice","size","TEMPORARY","fs","root","getDirectory","dir","save","getFile","createWriter","writer","onwriteend","toURL","onerror","error","code","ABORT_ERR","forEach","write","abort","WRITING","NOT_FOUND_ERR","FS_proto","prototype","msSaveOrOpenBlob","onwritestart","onprogress","onwrite","onabort","self","content","default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* FileSaver.js\r\n * A saveAs() FileSaver implementation.\r\n *\r\n * By Eli Grey, http://eligrey.com\r\n * ES6ified by Cole Chamberlain, https://github.com/cchamberlain\r\n *\r\n * License: MIT\r\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\r\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = exports.saveAs = window.saveAs || function (view) {\n  // IE <10 is explicitly unsupported\n  if (typeof navigator !== 'undefined' && /MSIE [1-9]\\./.test(navigator.userAgent)) return;\n  var doc = view.document;\n  // only get URL when necessary in case Blob.js hasn't overridden it yet\n  var get_URL = function get_URL() {\n    return view.URL || view.webkitURL || view;\n  };\n  var save_link = doc.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n  var can_use_save_link = 'download' in save_link;\n  var click = function click(node) {\n    var event = new MouseEvent('click');\n    node.dispatchEvent(event);\n  };\n  var is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent);\n  var webkit_req_fs = view.webkitRequestFileSystem;\n  var req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem;\n  var throw_outside = function throw_outside(ex) {\n    (view.setImmediate || view.setTimeout)(function () {\n      throw ex;\n    }, 0);\n  };\n  var force_saveable_type = 'application/octet-stream';\n  var fs_min_size = 0;\n  // the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n  var arbitrary_revoke_timeout = 1000 * 40; // in ms\n  var revoke = function revoke(file) {\n    var revoker = function revoker() {\n      if (typeof file === 'string') // file is an object URL\n        get_URL().revokeObjectURL(file);else // file is a File\n        file.remove();\n    };\n    /* // Take note W3C:\r\n    var\r\n      uri = typeof file === \"string\" ? file : file.toURL()\r\n    , revoker = function(evt) {\r\n      // idealy DownloadFinishedEvent.data would be the URL requested\r\n      if (evt.data === uri) {\r\n        if (typeof file === \"string\") { // file is an object URL\r\n          get_URL().revokeObjectURL(file);\r\n        } else { // file is a File\r\n          file.remove();\r\n        }\r\n      }\r\n    }\r\n    ;\r\n    view.addEventListener(\"downloadfinished\", revoker);\r\n    */\n    setTimeout(revoker, arbitrary_revoke_timeout);\n  };\n  var dispatch = function dispatch(filesaver, event_types, event) {\n    event_types = [].concat(event_types);\n    var i = event_types.length;\n    while (i--) {\n      var listener = filesaver['on' + event_types[i]];\n      if (typeof listener === 'function') {\n        try {\n          listener.call(filesaver, event || filesaver);\n        } catch (ex) {\n          throw_outside(ex);\n        }\n      }\n    }\n  };\n  var auto_bom = function auto_bom(blob) {\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) return new Blob(['ï»¿', blob], { type: blob.type });\n    return blob;\n  };\n\n  var FileSaver = function FileSaver(blob, name, no_auto_bom) {\n    _classCallCheck(this, FileSaver);\n\n    if (!no_auto_bom) blob = auto_bom(blob);\n    // First try a.download, then web filesystem, then object URLs\n    var filesaver = this,\n        type = blob.type,\n        blob_changed = false,\n        object_url,\n        target_view,\n        dispatch_all = function dispatch_all() {\n      dispatch(filesaver, 'writestart progress write writeend'.split(' '));\n    }\n    // on any filesys errors revert to saving with object URLs\n    ,\n        fs_error = function fs_error() {\n      if (target_view && is_safari && typeof FileReader !== 'undefined') {\n        // Safari doesn't allow downloading of blob urls\n        var reader = new FileReader();\n        reader.onloadend = function () {\n          var base64Data = reader.result;\n          target_view.location.href = 'data:attachment/file' + base64Data.slice(base64Data.search(/[,;]/));\n          filesaver.readyState = filesaver.DONE;\n          dispatch_all();\n        };\n        reader.readAsDataURL(blob);\n        filesaver.readyState = filesaver.INIT;\n        return;\n      }\n      // don't create more object URLs than needed\n      if (blob_changed || !object_url) {\n        object_url = get_URL().createObjectURL(blob);\n      }\n      if (target_view) {\n        target_view.location.href = object_url;\n      } else {\n        var new_tab = view.open(object_url, '_blank');\n        if (new_tab === undefined && is_safari) {\n          //Apple do not allow window.open, see http://bit.ly/1kZffRI\n          view.location.href = object_url;\n        }\n      }\n      filesaver.readyState = filesaver.DONE;\n      dispatch_all();\n      revoke(object_url);\n    },\n        abortable = function abortable(func) {\n      return function () {\n        if (filesaver.readyState !== filesaver.DONE) {\n          return func.apply(this, arguments);\n        }\n      };\n    },\n        create_if_not_found = { create: true, exclusive: false },\n        slice;\n\n    filesaver.readyState = filesaver.INIT;\n    if (!name) {\n      name = 'download';\n    }\n    if (can_use_save_link) {\n      object_url = get_URL().createObjectURL(blob);\n      setTimeout(function () {\n        save_link.href = object_url;\n        save_link.download = name;\n        click(save_link);\n        dispatch_all();\n        revoke(object_url);\n        filesaver.readyState = filesaver.DONE;\n      });\n      return;\n    }\n    // Object and web filesystem URLs have a problem saving in Google Chrome when\n    // viewed in a tab, so I force save with application/octet-stream\n    // http://code.google.com/p/chromium/issues/detail?id=91158\n    // Update: Google errantly closed 91158, I submitted it again:\n    // https://code.google.com/p/chromium/issues/detail?id=389642\n    if (view.chrome && type && type !== force_saveable_type) {\n      slice = blob.slice || blob.webkitSlice;\n      blob = slice.call(blob, 0, blob.size, force_saveable_type);\n      blob_changed = true;\n    }\n    // Since I can't be sure that the guessed media type will trigger a download\n    // in WebKit, I append .download to the filename.\n    // https://bugs.webkit.org/show_bug.cgi?id=65440\n    if (webkit_req_fs && name !== 'download') {\n      name += '.download';\n    }\n    if (type === force_saveable_type || webkit_req_fs) {\n      target_view = view;\n    }\n    if (!req_fs) {\n      fs_error();\n      return;\n    }\n    fs_min_size += blob.size;\n    req_fs(view.TEMPORARY, fs_min_size, abortable(function (fs) {\n      fs.root.getDirectory('saved', create_if_not_found, abortable(function (dir) {\n        var save = function save() {\n          dir.getFile(name, create_if_not_found, abortable(function (file) {\n            file.createWriter(abortable(function (writer) {\n              writer.onwriteend = function (event) {\n                target_view.location.href = file.toURL();\n                filesaver.readyState = filesaver.DONE;\n                dispatch(filesaver, 'writeend', event);\n                revoke(file);\n              };\n              writer.onerror = function () {\n                var error = writer.error;\n                if (error.code !== error.ABORT_ERR) {\n                  fs_error();\n                }\n              };\n              'writestart progress write abort'.split(' ').forEach(function (event) {\n                writer['on' + event] = filesaver['on' + event];\n              });\n              writer.write(blob);\n              filesaver.abort = function () {\n                writer.abort();\n                filesaver.readyState = filesaver.DONE;\n              };\n              filesaver.readyState = filesaver.WRITING;\n            }), fs_error);\n          }), fs_error);\n        };\n        dir.getFile(name, { create: false }, abortable(function (file) {\n          // delete file if it already exists\n          file.remove();\n          save();\n        }), abortable(function (ex) {\n          if (ex.code === ex.NOT_FOUND_ERR) {\n            save();\n          } else {\n            fs_error();\n          }\n        }));\n      }), fs_error);\n    }), fs_error);\n  };\n\n  var FS_proto = FileSaver.prototype;\n  var saveAs = function saveAs(blob, name, no_auto_bom) {\n    return new FileSaver(blob, name, no_auto_bom);\n  };\n\n  // IE 10+ (native saveAs)\n  if (typeof navigator !== 'undefined' && navigator.msSaveOrOpenBlob) {\n    return function (blob, name, no_auto_bom) {\n      if (!no_auto_bom) blob = auto_bom(blob);\n      return navigator.msSaveOrOpenBlob(blob, name || 'download');\n    };\n  }\n\n  FS_proto.abort = function () {\n    var filesaver = this;\n    filesaver.readyState = filesaver.DONE;\n    dispatch(filesaver, 'abort');\n  };\n  FS_proto.readyState = FS_proto.INIT = 0;\n  FS_proto.WRITING = 1;\n  FS_proto.DONE = 2;\n\n  FS_proto.error = FS_proto.onwritestart = FS_proto.onprogress = FS_proto.onwrite = FS_proto.onabort = FS_proto.onerror = FS_proto.onwriteend = null;\n\n  return saveAs;\n}(typeof self !== 'undefined' && self || typeof window !== 'undefined' && window || undefined.content);\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nexports.default = saveAs;"]},"metadata":{},"sourceType":"script"}