{"ast":null,"code":"var _jsxFileName = \"/home/mayakuntla/Videos/cp/src/Components/Pages/Scp_home.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport React from 'react';\nimport AppContext from '../App_context';\nimport './Scp_home.css';\nimport Image from '../../Images/Graph_transaction.jpg';\nimport Image1 from '../../Images/SIFT_framework.png';\nimport Box from '@material-ui/core/Box';\nimport { FaItalic } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Scp_home() {\n  _s();\n\n  const myContext = useContext(AppContext);\n  const [show_content, set_show_content] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: myContext.side ? \"scp_main_div_shrink\" : \"scp_main_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_heading\",\n        children: \"Subgraph Coverage Patterns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"scp_horizontal_line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: myContext.side ? \"scp_content\" : \"scp_content_expand\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first_para\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pattern mining from Graph Transactional Data (\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"GTD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 71\n          }, this), ' ', \") is an active area of research with applications in the domains of bioinformatics, chemical informatics and social networks.\", ' ', \"Existing works address the problem of mining frequent subgraphs from \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"GTD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 63\n          }, this), \".\", ' ', \"However,\", ' ', \"the knowledge concerning the coverage aspect of a set of subgraphs is also valuable for improving the performance of several applications.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: show_content ? /*#__PURE__*/_jsxDEV(Box, {\n            className: \"box1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown_heading\",\n              children: [\"Contents [\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"show_hide\",\n                onClick: () => set_show_content(!show_content),\n                children: \"Hide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 69\n              }, this), \" ] \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list_of_contents\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#def\",\n                  children: \"1. Definiton\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#example\",\n                  children: \"2. Example\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#framework\",\n                  children: \"3. SIFT Framework\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#references\",\n                  children: \"4. References\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            className: \"box1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown_heading\",\n              children: [\"Contents [\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"show_hide\",\n                onClick: () => set_show_content(!show_content),\n                children: \"Show\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 69\n              }, this), \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition_heading\",\n        id: \"def\",\n        children: \"Definition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Given a graph transactional dataset and user defined constraints \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\"minimum Relative Frequency\", ' ', \"(\", ' ', \"minRF\", ' ', \")\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 89\n          }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\"minimum Coverage Support\", ' ', \"(\", ' ', \"minCS\", ' ', \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 155\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\"maximum Overlap Ratio\", ' ', \"(\", ' ', \"maxOR\", ' ', \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 213\n          }, this), \",\", ' ', \"a set of subgraphs say \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"SP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 292\n          }, this), \" \", '  ', \"is called Subgraph Coverage Pattern if \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Coverage Support of SP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 50\n          }, this), \" \", \">=\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"minCS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 87\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Relative Frequency of SP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 104\n          }, this), ' ', \" \", \">=\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"minRF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 148\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Overlap Ratio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 165\n          }, this), \" \", \"<=\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"maxOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 193\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition_heading\",\n        id: \"example\",\n        children: \"Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Image,\n          className: \"example_image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image_name\",\n          children: \"Fig. 1: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Figure 1.a of above image is the Graph Transactional Dataset consisting of 10 graphs.\", ' ', \"In Figure 2(b),\", ' ', \"let \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"SP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 143\n            }, this), \" be the set \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"{S1, S2, S3}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 164\n            }, this), \".\", ' ', \"The \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"RF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 197\n            }, this), \" values of \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"S1,\", ' ', \"S2 and S3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 217\n            }, this), \" are 0.3,\", ' ', \"0.3 and 0.2 respectively.\", ' ', \"The coverage set of \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"SP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 305\n            }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"CSet(\", ' ', \"SP,\", ' ', \"D\", ' ', \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 320\n            }, this), ' ', \"=\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"{G1,{' '}G4 ,G5 ,G6 ,G7 ,G8 ,G10 }\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 30\n            }, this), \".\", ' ', \"The coverage support of SP,\", ' ', \"CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 116\n            }, this), \" (SP, D) = |CSet(SP,D)| / |D| = 7/10 = 0.7.\", ' ', \"The multiset of transactions covered by pattern SP,\", ' ', \"M(SP, D)=\", \"{(G1 ,G6 ,G10 ),(G5 ,G7 ,G8 ),(G4 ,G7 )}\", \". Therefore, the overlap among transactions covered by subgraphs of SP ,overlap\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 149\n            }, this), \"(SP, D) = (|M (SP,D)|/|CSet(SP,D)|)-1 = (8/7)-1 = 0.142.Given the values of minRF\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 244\n            }, this), \" = 0.2, minCS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 271\n            }, this), \" = 0.7 and maxO\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 10\n            }, this), \" =0.5, the pattern SP = \", \"{S1 , S2 , S3 }\", \" is an SCP.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition_heading\",\n        id: \"framework\",\n        children: \"SIFT Framework\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Subgraph ID based Flat Transactional(SIFT)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 20\n          }, this), \" framework is generalized in the sense that it extracts all potential SCPs from GTD subject to user-specified thresholds of relative frequency, coverage support and overlap.The framework consists of three parts for extracting SCPs from Graph Transactional Dataset.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_and_image\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scp_definition_text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text_para\",\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"tab1\",\n              children: \"                       1.  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 50\n            }, this), \"For extracting subgraphs from D, which satisfies the minRFg constraint, an existing subgraph discovery algorithm, such as gSpan can be employed. We construct the database of\", \" <SID, Clabel>\", \" as the output , where SID is a Subgraph Identifier and Clabe is minimum DFS code assigned as canonical label to subgraph.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text_para\",\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"tab1\",\n              children: \"                       2.  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 50\n            }, this), \"Second, with the database of \", \"<SID, Clabel >\", \"as the input, we form the SID-based flat transactional dataset, where each SID-based flat transaction consists of all SIDs of subgraphs corresponding graph transaction. In this step, we map SIDs to corresponding graph transaction identifier (GID) and form the database of \", \"<GID, SIDs[ ] > \", \" as the output. This forms the SID- based flat transactional dataset.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text_para\",\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"tab1\",\n              children: \"                       3.  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 50\n            }, this), \"Third, after forming the SID-based flat transactional dataset, the problem of extracting candidate SCPs becomes the problem of extracting coverage patterns. Therefore, we can employ an existing coverage pattern mining algorithm to extract SCPs. For efficient extraction of SCPs, we employ a pruning heuristic related to overlap and efficiently extract SCPs subject to the minCSg and minOg constraints.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Image1,\n            className: \"example_image2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition_heading\",\n        id: \"references\",\n        children: \"References\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Scp_home, \"GJTRWgLZpdMebhNE7pIi9MXbjrE=\");\n\n_c = Scp_home;\nexport default Scp_home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scp_home\");","map":{"version":3,"sources":["/home/mayakuntla/Videos/cp/src/Components/Pages/Scp_home.js"],"names":["useContext","useState","React","AppContext","Image","Image1","Box","FaItalic","Scp_home","myContext","show_content","set_show_content","side"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport React from 'react';\nimport AppContext from '../App_context';\nimport './Scp_home.css';\nimport Image from '../../Images/Graph_transaction.jpg';\nimport Image1 from '../../Images/SIFT_framework.png';\nimport Box from '@material-ui/core/Box';\nimport { FaItalic } from \"react-icons/fa\";\n\n\nfunction Scp_home() {\n    const myContext = useContext(AppContext);\n    const [show_content,set_show_content]= useState(0);\n    \n    return (\n        <>\n        <div className={myContext.side ? \"scp_main_div_shrink\" : \"scp_main_div\"}>\n            <div className=\"scp_heading\">\n                Subgraph Coverage Patterns\n            </div>\n            <hr className=\"scp_horizontal_line\"/>\n        </div>\n            <div className={myContext.side ? \"scp_content\" : \"scp_content_expand\"}>\n                <div className=\"first_para\">\n                <p>Pattern mining from Graph Transactional Data ({' '}<i>GTD</i>{' '}) is an active area of research with applications in the domains of bioinformatics, chemical informatics and social networks.{' '}Existing works address \n                the problem of mining frequent subgraphs from <i>GTD</i>.{' '}However,{' '}the knowledge concerning the coverage aspect of a set of subgraphs is also valuable for improving the performance of several applications.</p>\n                </div>\n                <div className=\"scp_definition\">\n                    <div>\n                    {show_content ? <Box className=\"box1\">\n                        <div className=\"dropdown_heading\">Contents [<div className=\"show_hide\" onClick={()=>set_show_content(!show_content)}>Hide</div> ] </div>\n                        <div className=\"list_of_contents\">\n                            <div><a href=\"#def\">1. Definiton</a></div>\n                            <div><a href=\"#example\">2. Example</a></div>\n                            <div><a href=\"#framework\">3. SIFT Framework</a></div>\n                            <div><a href=\"#references\">4. References</a></div>\n                        </div>\n                    \n                    </Box> :\n                    <Box className=\"box1\">\n                        <div className=\"dropdown_heading\">Contents [<div className=\"show_hide\" onClick={()=>set_show_content(!show_content)}>Show</div>]</div>\n                    </Box>}\n                    </div>\n                </div>\n                <div className=\"scp_definition_heading\" id=\"def\">\n                    Definition\n                </div>\n                <div className=\"scp_definition\">\n                    <p>Given a graph transactional dataset and user defined constraints <i>minimum Relative Frequency{' '}({' '}minRF{' '}){' '}</i>,{' '}<i>minimum Coverage Support{' '}({' '}minCS{' '})</i> and <i>maximum Overlap Ratio{' '}({' '}maxOR{' '})</i>,{' '}a set of subgraphs say <i>SP</i> {'  '}is called \n                    Subgraph Coverage Pattern if <i>Coverage Support of SP</i> {\">=\"} <i>minCS</i> and <i>Relative Frequency of SP</i>{' '} {\">=\"} <i>minRF</i> and <i>Overlap Ratio</i> {\"<=\"} <i>maxOR</i>.</p>\n                </div>\n                <div className=\"scp_definition_heading\" id=\"example\">\n                    Example\n                </div>\n                <div className=\"scp_definition\">\n                    <img src={Image} className=\"example_image\"></img>\n                    <div className=\"image_name\">Fig. 1: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2</div>\n                    <div><p>Figure 1.a of above image is the Graph Transactional Dataset consisting of 10 graphs.{' '}In Figure 2(b),{' '}let <i>SP</i> be the set <i>{\"{S1, S2, S3}\"}</i>.{' '}The <i>RF</i> values of <i>S1,{' '}S2 and S3</i> are 0.3,{' '}0.3 and 0.2 respectively.{' '}The coverage set of <i>SP</i>,{' '}<i>CSet({' '}SP,{' '}D{' '})</i>{' '}=\n                        {' '}<i>{\"{G1,{' '}G4 ,G5 ,G6 ,G7 ,G8 ,G10 }\"}</i>.{' '}The coverage support of SP,{' '}CS{<sub>g</sub>} (SP, D) = |CSet(SP,D)| / |D| = 7/10 = 0.7.{' '}The multiset of transactions covered by pattern SP,{' '}M(SP, D)=\n                        {\"{(G1 ,G6 ,G10 ),(G5 ,G7 ,G8 ),(G4 ,G7 )}\"}. Therefore, the overlap among transactions covered by subgraphs of SP ,overlap{<sub>g</sub>}(SP, D) = (|M (SP,D)|/|CSet(SP,D)|)-1 = (8/7)-1 = 0.142.Given the values of minRF{<sub>g</sub>} = 0.2, minCS{<sub>g</sub>} = 0.7 and \n    maxO{<sub>g</sub>} =0.5, the pattern SP = {\"{S1 , S2 , S3 }\"} is an SCP.</p></div>\n                </div>\n                <div className=\"scp_definition_heading\" id=\"framework\">\n                    SIFT Framework\n                </div>\n                <div className=\"scp_definition\">\n                <p><b>Subgraph ID based Flat Transactional(SIFT)</b> framework is generalized in the sense that\nit extracts all potential SCPs from GTD subject to\nuser-specified thresholds of relative frequency, coverage\nsupport and overlap.The framework consists of three parts for extracting SCPs from Graph Transactional Dataset.</p>\n                </div>\n                <div className=\"text_and_image\">\n                    <div className=\"scp_definition_text\">\n                        <p className=\"text_para\"><pre className=\"tab1\">                       1.  </pre>For extracting subgraphs from D, which satisfies\n\n                        the minRFg constraint, an existing subgraph discovery algorithm, such as gSpan can be employed. We construct the database of \n                        {\" <SID, Clabel>\"} as the output , where SID is a Subgraph Identifier and Clabe is minimum DFS code assigned as canonical label to subgraph.\n                        </p>\n                        <p className=\"text_para\"><pre className=\"tab1\">                       2.  </pre>Second, with the database of {\"<SID, Clabel >\"}\nas the input, we form the SID-based flat transactional\ndataset, where each SID-based flat transaction consists\nof all SIDs of subgraphs corresponding graph transaction. In this step, we map SIDs to corresponding graph\ntransaction identifier (GID) and form the database of {\"<GID, SIDs[ ] > \"} as the output. This forms the SID-\nbased flat transactional dataset.\n                        </p>\n                        <p className=\"text_para\"><pre className=\"tab1\">                       3.  </pre>Third, after forming\nthe SID-based flat transactional dataset, the problem of\nextracting candidate SCPs becomes the problem of extracting coverage patterns. Therefore, we can employ an\nexisting coverage pattern mining algorithm to extract SCPs. For efficient extraction of SCPs, we employ\na pruning heuristic related to overlap and efficiently\nextract SCPs subject to the minCSg and minOg constraints.\n                        </p>\n                    </div>\n                    <div>\n                        <img src={Image1} className=\"example_image2\"></img>\n                    </div>\n                </div>\n                <div className=\"scp_definition_heading\" id=\"references\">\n                    References\n                </div>\n                <div className=\"scp_definition\">\n\n                </div>\n            </div>\n        </>\n  );\n}\n\nexport default Scp_home;"]},"metadata":{},"sourceType":"module"}