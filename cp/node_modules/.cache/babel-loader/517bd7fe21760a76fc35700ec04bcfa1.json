{"ast":null,"code":"var _jsxFileName = \"/home/mayakuntla/Videos/cp/src/Components/Pages/Scp_home.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport React from 'react';\nimport AppContext from '../App_context';\nimport './Scp_home.css';\nimport { Link } from 'react-router-dom';\nimport Image from '../../Images/Graph_transaction.jpg';\nimport Image1 from '../../Images/SIFT_framework.png';\nimport Box from '@material-ui/core/Box';\nimport { FaItalic } from \"react-icons/fa\";\nimport Image6 from '../../Images/Coverage_Support.png';\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Scp_home() {\n  _s();\n\n  const myContext = useContext(AppContext);\n  const [show_content, set_show_content] = useState(0);\n  const [selected_def_for_modal, set_selected_def_for_modal] = useState(\"\");\n  const [show_modal, set_show_modal] = React.useState(false);\n\n  const show_modal_with_def = mincs => {\n    set_selected_def_for_modal(mincs);\n    set_show_modal(true);\n  };\n\n  const ref = useRef();\n  useEffect(() => {\n    const checkIfClickedOutside = e => {\n      // If the menu is open and the clicked target is not within the menu,\n      // then close the menu\n      if (show_modal && ref.current && !ref.current.contains(e.target)) {\n        set_show_modal(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\n    return () => {\n      // Cleanup the event listener\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\n    };\n  }, [show_modal]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: myContext.side ? \"scp_main_div_shrink\" : \"scp_main_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_heading\",\n        children: \"Subgraph Coverage Patterns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"scp_horizontal_line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: myContext.side ? \"scp_content\" : \"scp_content_expand\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first_para\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pattern mining from Graph Transactional Data (\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"GTD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 71\n          }, this), ' ', \") is an active area of research with applications in the domains of bioinformatics, chemical informatics and social networks.\", ' ', \"Existing works address the problem of mining frequent subgraphs from \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"GTD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 63\n          }, this), \".\", ' ', \"However,\", ' ', \"the knowledge concerning the coverage aspect of a set of subgraphs is also valuable for improving the performance of several applications.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: show_content ? /*#__PURE__*/_jsxDEV(Box, {\n            className: \"box1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown_heading\",\n              children: [\"Contents [\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"show_hide\",\n                onClick: () => set_show_content(!show_content),\n                children: \"Hide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 69\n              }, this), \" ] \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list_of_contents\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#def\",\n                  children: \"1. Definiton\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#example\",\n                  children: \"2. Example\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#framework\",\n                  children: \"3. SIFT Framework\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#references\",\n                  children: \"4. References\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            className: \"box1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown_heading\",\n              children: [\"Contents [\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"show_hide\",\n                onClick: () => set_show_content(!show_content),\n                children: \"Show\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 69\n              }, this), \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition_heading\",\n        id: \"def\",\n        children: \"Definition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Given a graph transactional dataset and user defined constraints \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\"minimum Relative Frequency\", ' ', \"(\", ' ', \"minRF\", ' ', \")\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 89\n          }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => {\n              show_modal_with_def(\"mincs\");\n            },\n            className: \"def\",\n            children: [\"minimum Coverage Support\", ' ', \"(\", ' ', \"minCS\", ' ', \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 155\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\"maximum Overlap Ratio\", ' ', \"(\", ' ', \"maxOR\", ' ', \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 274\n          }, this), \",\", ' ', \"a set of subgraphs say \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"SP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 353\n          }, this), \" \", '  ', \"is called Subgraph Coverage Pattern if \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Coverage Support of SP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 50\n          }, this), \" \", \">=\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"minCS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 87\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Relative Frequency of SP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 104\n          }, this), ' ', \" \", \">=\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"minRF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 148\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Overlap Ratio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 165\n          }, this), \" \", \"<=\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"maxOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 193\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        ref: ref,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: show_modal ? \"def_modal\" : \"display_none\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"def_modal_content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: () => set_show_modal(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"box_def\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box_heading_def\",\n                children: \"Coverage Support\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_definition_def\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"para\",\n                  children: [\"Given Graph Transactional Dataset D and a subgraph pattern SP, the coverage support of SP (CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 118\n                  }, this), \" (SP, D)) is the percentage of graph transactions in D covered by at least one subgraph in SP .\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"para\",\n                  children: [\"Here, 0 \\u2264 CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 37\n                  }, this), \" (SP, D) \\u2264 1\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"para\",\n                  children: [\"CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 27\n                  }, this), \" (SP, D) = 1 when all of the graph transactions in D are covered by SP . Conversely, CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 23\n                  }, this), \" (SP, D) = 0 when none of the graph transactions are covered by SP.A pattern SP is interesting with respect to coverage point of view if CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 6\n                  }, this), \" (SP, D) \\u2265 minCS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 34\n                  }, this), \" , where minCS g is a userdefined minimum Coverage Support threshold for graph transactions\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"scp_definition_heading\",\n                  id: \"example\",\n                  children: \"Example\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scp_definition\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"terms_example_image\",\n                  src: Image6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"terms_image_name\",\n                  children: \"Fig. 1: Formula for Coverage Support of a Subgraph Pattern SP in D \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_example_definition_def\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: Image,\n                className: \"example_image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image_name\",\n                children: \"Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"para_down_example_def\",\n                children: [\"Consider graph transactional dataset D comprising of 10 graph transactions G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 134\n                }, this), \" to G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 2\n                }, this), \" , shown in Figure 2(a). Three subgraphs S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 57\n                }, this), \" , S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 73\n                }, this), \" and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 2\n                }, this), \" are shown in Figure 2(b). Let Subgraph Pattern SP = \", \"{\", \" S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 74\n                }, this), \",S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 88\n                }, this), \",\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 101\n                }, this), \" \", \"}\", \" .Here, S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 128\n                }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 2\n                }, this), \", G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 17\n                }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 35\n                }, this), \" ; S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 52\n                }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 83\n                }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 99\n                }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 117\n                }, this), \" ; and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 2\n                }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 33\n                }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 51\n                }, this), \" . The subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 80\n                }, this), \" is said to cover G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 11\n                }, this), \" since S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 31\n                }, this), \" \\u2286 G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 47\n                }, this), \" . Hence, cover(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 76\n                }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 92\n                }, this), \" )=1. Moreover, |CSet(SP , D)| / |D| = |\", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 41\n                }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 57\n                }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 73\n                }, this), \"}\", \" \\u222A \", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 100\n                }, this), \" ,G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 115\n                }, this), \",G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 130\n                }, this), \" \", \"}\", \" \\u222A \", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 157\n                }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 173\n                }, this), \"}\", \" | = 8 /10 = 0.8.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition_heading\",\n        id: \"example\",\n        children: \"Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Image,\n          className: \"example_image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image_name\",\n          children: \"Fig. 1: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Figure 1.a of above image is the Graph Transactional Dataset consisting of 10 graphs.\", ' ', \"In Figure 2(b),\", ' ', \"let \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"SP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 143\n            }, this), \" be the set \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"{ S1, S2, S3 }\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 164\n            }, this), \".\", ' ', \"The \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"RF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 199\n            }, this), \" values of \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"S1,\", ' ', \"S2 and S3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 219\n            }, this), \" are 0.3,\", ' ', \"0.3 and 0.2 respectively.\", ' ', \"The coverage set of \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"SP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 307\n            }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"CSet(\", ' ', \"SP,\", ' ', \"D\", ' ', \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 322\n            }, this), ' ', \"=\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"{ G1, G4, G5, G6, G7, G8, G10 }\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 30\n            }, this), \".\", ' ', \"The coverage support of \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"SP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 102\n            }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 123\n              }, this), \" (SP, D) = |\", ' ', \"CSet(SP,D)\", ' ', \"| / |D|\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 117\n            }, this), \" = 7/10 = 0.7.\", ' ', \"The multiset of transactions covered by pattern \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"SP,\", ' ', \"M(\", ' ', \"SP, D\", ' ', \")\", ' ', \"=\", ' ', \"{ ( G1, G6, G10 ), ( G5, G7, G8 ), ( G4, G7 ) }\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 246\n            }, this), \". Therefore, the overlap among transactions covered by subgraphs of \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"SP ,overlap\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 168\n              }, this), ' ', \"(\", ' ', \"SP, D\", ' ', \") = (\", ' ', \"|\", ' ', \"M (SP,D)\", ' ', \"|\", ' ', \"/\", ' ', \"|\", ' ', \"CSet(\", ' ', \"SP,D\", ' ', \")\", ' ', \"|\", ' ', \")\", ' ', \"-\", ' ', \"1\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 153\n            }, this), \" = (8/7)-1 = 0.142.\", ' ', \"Given the values of \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"minRF\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 350\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 341\n            }, this), \" = 0.2, \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"minCS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 384\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 375\n            }, this), \" = 0.7 and\", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"maxO\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 5\n            }, this), \" = 0.5, the pattern \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"SP = \", \"{ S1, S2, S3 }\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 50\n            }, this), \" is an SCP.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition_heading\",\n        id: \"framework\",\n        children: \"SIFT Framework\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"Subgraph ID based Flat Transactional\", ' ', \"(\", ' ', \"SIFT\", ' ', \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 20\n          }, this), ' ', \"framework is generalized in the sense that it extracts all potential SCPs from GTD subject to user-specified thresholds of relative frequency, coverage support and overlap.The framework consists of three parts for extracting SCPs from Graph Transactional Dataset.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_and_image\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scp_definition_text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text_para\",\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"tab1\",\n              children: \"                       1.  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 50\n            }, this), \"For extracting subgraphs from D, which satisfies the minRFg constraint, an existing subgraph discovery algorithm, such as gSpan can be employed. We construct the database of\", \" <SID, Clabel>\", \" as the output , where SID is a Subgraph Identifier and Clabe is minimum DFS code assigned as canonical label to subgraph.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text_para\",\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"tab1\",\n              children: \"                       2.  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 50\n            }, this), \"Second, with the database of \", \"<SID, Clabel >\", \"as the input, we form the SID-based flat transactional dataset, where each SID-based flat transaction consists of all SIDs of subgraphs corresponding graph transaction. In this step, we map SIDs to corresponding graph transaction identifier (GID) and form the database of \", \"<GID, SIDs[ ] > \", \" as the output. This forms the SID- based flat transactional dataset.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text_para\",\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"tab1\",\n              children: \"                       3.  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 50\n            }, this), \"Third, after forming the SID-based flat transactional dataset, the problem of extracting candidate SCPs becomes the problem of extracting coverage patterns. Therefore, we can employ an existing coverage pattern mining algorithm to extract SCPs. For efficient extraction of SCPs, we employ a pruning heuristic related to overlap and efficiently extract SCPs subject to the minCSg and minOg constraints.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Image1,\n            className: \"example_image2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition_heading\",\n        id: \"references\",\n        children: \"References\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Scp_home, \"uQgWe2pqx6fWtxaE1OFuK49WMqI=\");\n\n_c = Scp_home;\nexport default Scp_home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scp_home\");","map":{"version":3,"sources":["/home/mayakuntla/Videos/cp/src/Components/Pages/Scp_home.js"],"names":["useContext","useState","React","AppContext","Link","Image","Image1","Box","FaItalic","Image6","useEffect","useRef","Scp_home","myContext","show_content","set_show_content","selected_def_for_modal","set_selected_def_for_modal","show_modal","set_show_modal","show_modal_with_def","mincs","ref","checkIfClickedOutside","e","current","contains","target","document","addEventListener","removeEventListener","side"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport React from 'react';\nimport AppContext from '../App_context';\nimport './Scp_home.css';\nimport { Link } from 'react-router-dom';\nimport Image from '../../Images/Graph_transaction.jpg';\nimport Image1 from '../../Images/SIFT_framework.png';\nimport Box from '@material-ui/core/Box';\nimport { FaItalic } from \"react-icons/fa\";\nimport Image6 from '../../Images/Coverage_Support.png';\nimport { useEffect, useRef} from \"react\";\n\n\nfunction Scp_home() {\n    const myContext = useContext(AppContext);\n    const [show_content,set_show_content]= useState(0);\n    const [selected_def_for_modal,set_selected_def_for_modal]=useState(\"\");\n    const [show_modal,set_show_modal]=React.useState(false);\n    const show_modal_with_def=(mincs)=>{\n        set_selected_def_for_modal(mincs);\n        set_show_modal(true);\n    }\n    const ref = useRef()\n\n    useEffect(() => {\n\n        const checkIfClickedOutside = e => {\n    \n          // If the menu is open and the clicked target is not within the menu,\n    \n          // then close the menu\n    \n          if (show_modal && ref.current && !ref.current.contains(e.target)) {\n    \n            set_show_modal(false);\n    \n          }\n    \n        }\n    \n    \n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n    \n    \n        return () => {\n    \n          // Cleanup the event listener\n    \n          document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n    \n        }\n    \n      }, [show_modal])\n    \n    \n    return (\n        <>\n        \n        <div className={myContext.side ? \"scp_main_div_shrink\" : \"scp_main_div\"}>\n            <div className=\"scp_heading\">\n                Subgraph Coverage Patterns\n            </div>\n            <hr className=\"scp_horizontal_line\"/>\n        </div>\n            <div className={myContext.side ? \"scp_content\" : \"scp_content_expand\"}>\n                <div className=\"first_para\">\n                <p>Pattern mining from Graph Transactional Data ({' '}<i>GTD</i>{' '}) is an active area of research with applications in the domains of bioinformatics, chemical informatics and social networks.{' '}Existing works address \n                the problem of mining frequent subgraphs from <i>GTD</i>.{' '}However,{' '}the knowledge concerning the coverage aspect of a set of subgraphs is also valuable for improving the performance of several applications.</p>\n                </div>\n                <div className=\"scp_definition\">\n                    <div>\n                    {show_content ? <Box className=\"box1\">\n                        <div className=\"dropdown_heading\">Contents [<div className=\"show_hide\" onClick={()=>set_show_content(!show_content)}>Hide</div> ] </div>\n                        <div className=\"list_of_contents\">\n                            <div><a href=\"#def\">1. Definiton</a></div>\n                            <div><a href=\"#example\">2. Example</a></div>\n                            <div><a href=\"#framework\">3. SIFT Framework</a></div>\n                            <div><a href=\"#references\">4. References</a></div>\n                        </div>\n                    \n                    </Box> :\n                    <Box className=\"box1\">\n                        <div className=\"dropdown_heading\">Contents [<div className=\"show_hide\" onClick={()=>set_show_content(!show_content)}>Show</div>]</div>\n                    </Box>}\n                    </div>\n                </div>\n                <div className=\"scp_definition_heading\" id=\"def\">\n                    Definition\n                </div>\n                <div className=\"scp_definition\">\n                    <p>Given a graph transactional dataset and user defined constraints <i>minimum Relative Frequency{' '}({' '}minRF{' '}){' '}</i>,{' '}<i onClick={()=>{show_modal_with_def(\"mincs\")}} className=\"def\">minimum Coverage Support{' '}({' '}minCS{' '})</i> and <i>maximum Overlap Ratio{' '}({' '}maxOR{' '})</i>,{' '}a set of subgraphs say <i>SP</i> {'  '}is called \n                    Subgraph Coverage Pattern if <i>Coverage Support of SP</i> {\">=\"} <i>minCS</i> and <i>Relative Frequency of SP</i>{' '} {\">=\"} <i>minRF</i> and <i>Overlap Ratio</i> {\"<=\"} <i>maxOR</i>.</p>\n                </div>\n                <div className=\"wrapper\" ref={ref}>\n                <div className={show_modal ? \"def_modal\" : \"display_none\"}>\n                    <div className=\"def_modal_content\">\n                        <span className=\"close\" onClick={()=>set_show_modal(false)}>&times;</span>\n                        <Box className=\"box_def\">\n    <div className=\"box_heading_def\">\n      Coverage Support\n    </div>\n    \n    </Box>\n    <div className=\"terms_definition_def\">\n      <div>\n    <p className=\"para\">Given Graph Transactional Dataset D and a subgraph pattern SP, the coverage support of SP (CS<sub>g</sub> (SP, D)) is the percentage of graph\ntransactions in D covered by at least one subgraph in\nSP .</p>\n    <p className=\"para\">Here, 0 ≤ CS<sub>g</sub> (SP, D) ≤ 1</p>\n    <p className=\"para\">CS<sub>g</sub> (SP, D) = 1\nwhen all of the graph transactions in D are covered\nby SP . Conversely, CS<sub>g</sub> (SP, D) = 0 when none of the\ngraph transactions are covered by SP.A pattern SP is interesting with respect to coverage point of view\nif CS<sub>g</sub> (SP, D) ≥ minCS<sub>g</sub> , where minCS g is a userdefined minimum Coverage Support threshold for graph\ntransactions</p>\n          <div className=\"scp_definition_heading\" id=\"example\">\n              Example\n          </div>\n        \n        </div>\n        <div className=\"scp_definition\">\n        <img className=\"terms_example_image\" src={Image6}></img>\n        <div className=\"terms_image_name\">Fig. 1: Formula for Coverage Support of a Subgraph Pattern SP in D </div>\n        </div>\n      </div>\n      <div className=\"terms_example_definition_def\">\n                    <img src={Image} className=\"example_image\"></img>\n                    <div className=\"image_name\">Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2</div>\n                    <p className=\"para_down_example_def\">Consider graph transactional dataset D comprising of 10 graph transactions G<sub>1</sub> to\nG<sub>10</sub> , shown in Figure 2(a). Three subgraphs S<sub>1</sub> , S<sub>2</sub> and\nS<sub>3</sub> are shown in Figure 2(b). Let Subgraph Pattern SP = {\"{\"} S<sub>1</sub>,S<sub>2</sub>,<sub>3</sub> {\"}\"} .Here, S<sub>1</sub> is a subgraph of\nG<sub>1</sub>, G<sub>6</sub> and G<sub>10</sub> ; S<sub>2</sub> is a subgraph of G<sub>5</sub> , G<sub>7</sub> and G<sub>8</sub> ; and\nS<sub>3</sub> is a subgraph of G<sub>4</sub> and G<sub>7</sub> . The subgraph S<sub>1</sub> is said\nto cover G<sub>1</sub> since S<sub>1</sub> ⊆ G<sub>1</sub> . Hence, cover(S<sub>1</sub> , G<sub>1</sub> )=1.\nMoreover, |CSet(SP , D)| / |D| = |{\"{\"}G<sub>1</sub> ,G <sub>6</sub> ,G <sub>10</sub>{\"}\"} ∪ {\"{\"}G<sub>5</sub> ,G<sub>7</sub>,G <sub>8</sub> {\"}\"} ∪ {\"{\"}G<sub>4</sub> ,G <sub>7</sub>{\"}\"} | = 8 /10 = 0.8.\n </p>\n    </div>\n                    </div>\n                </div></div>\n                <div className=\"scp_definition_heading\" id=\"example\">\n                    Example\n                </div>\n                <div className=\"scp_definition\">\n                    <img src={Image} className=\"example_image\"></img>\n                    <div className=\"image_name\">Fig. 1: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2</div>\n                    <div><p>Figure 1.a of above image is the Graph Transactional Dataset consisting of 10 graphs.{' '}In Figure 2(b),{' '}let <i>SP</i> be the set <i>{\"{ S1, S2, S3 }\"}</i>.{' '}The <i>RF</i> values of <i>S1,{' '}S2 and S3</i> are 0.3,{' '}0.3 and 0.2 respectively.{' '}The coverage set of <i>SP</i>,{' '}<i>CSet({' '}SP,{' '}D{' '})</i>{' '}=\n                        {' '}<i>{\"{ G1, G4, G5, G6, G7, G8, G10 }\"}</i>.{' '}The coverage support of <i>SP</i>,{' '}<i>CS{<sub>g</sub>} (SP, D) = |{' '}CSet(SP,D){' '}| / |D|</i> = 7/10 = 0.7.{' '}The multiset of transactions covered by pattern <i>SP,{' '}M({' '}SP, D{' '}){' '}=\n                        {' '}{\"{ ( G1, G6, G10 ), ( G5, G7, G8 ), ( G4, G7 ) }\"}</i>. Therefore, the overlap among transactions covered by subgraphs of <i>SP ,overlap{<sub>g</sub>}{' '}({' '}SP, D{' '}) = ({' '}|{' '}M (SP,D){' '}|{' '}/{' '}|{' '}CSet({' '}SP,D{' '}){' '}|{' '}){' '}-{' '}1</i> = (8/7)-1 = 0.142.{' '}Given the values of <i>minRF{<sub>g</sub>}</i> = 0.2, <i>minCS{<sub>g</sub>}</i> = 0.7 and \n    <i>maxO{<sub>g</sub>}</i> = 0.5, the pattern <i>SP = {\"{ S1, S2, S3 }\"}</i> is an SCP.</p></div>\n                </div>\n                <div className=\"scp_definition_heading\" id=\"framework\">\n                    SIFT Framework\n                </div>\n                <div className=\"scp_definition\">\n                <p><b><i>Subgraph ID based Flat Transactional{' '}({' '}SIFT{' '})</i></b>{' '}framework is generalized in the sense that\nit extracts all potential SCPs from GTD subject to\nuser-specified thresholds of relative frequency, coverage\nsupport and overlap.The framework consists of three parts for extracting SCPs from Graph Transactional Dataset.</p>\n                </div>\n                <div className=\"text_and_image\">\n                    <div className=\"scp_definition_text\">\n                        <p className=\"text_para\"><pre className=\"tab1\">                       1.  </pre>For extracting subgraphs from D, which satisfies\n\n                        the minRFg constraint, an existing subgraph discovery algorithm, such as gSpan can be employed. We construct the database of \n                        {\" <SID, Clabel>\"} as the output , where SID is a Subgraph Identifier and Clabe is minimum DFS code assigned as canonical label to subgraph.\n                        </p>\n                        <p className=\"text_para\"><pre className=\"tab1\">                       2.  </pre>Second, with the database of {\"<SID, Clabel >\"}\nas the input, we form the SID-based flat transactional\ndataset, where each SID-based flat transaction consists\nof all SIDs of subgraphs corresponding graph transaction. In this step, we map SIDs to corresponding graph\ntransaction identifier (GID) and form the database of {\"<GID, SIDs[ ] > \"} as the output. This forms the SID-\nbased flat transactional dataset.\n                        </p>\n                        <p className=\"text_para\"><pre className=\"tab1\">                       3.  </pre>Third, after forming\nthe SID-based flat transactional dataset, the problem of\nextracting candidate SCPs becomes the problem of extracting coverage patterns. Therefore, we can employ an\nexisting coverage pattern mining algorithm to extract SCPs. For efficient extraction of SCPs, we employ\na pruning heuristic related to overlap and efficiently\nextract SCPs subject to the minCSg and minOg constraints.\n                        </p>\n                    </div>\n                    <div>\n                        <img src={Image1} className=\"example_image2\"></img>\n                    </div>\n                </div>\n                <div className=\"scp_definition_heading\" id=\"references\">\n                    References\n                </div>\n                <div className=\"scp_definition\">\n\n                </div>\n            </div>\n            \n        </>\n  );\n}\n\nexport default Scp_home;"]},"metadata":{},"sourceType":"module"}