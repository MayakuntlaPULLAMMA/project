{"ast":null,"code":"var _jsxFileName = \"/home/mayakuntla/Videos/cp/src/Components/Pages/Scp_home.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport React from 'react';\nimport AppContext from '../App_context';\nimport './Scp_home.css';\nimport { Link } from 'react-router-dom';\nimport Image from '../../Images/Graph_transaction.jpg';\nimport Image1 from '../../Images/SIFT_framework.png';\nimport Box from '@material-ui/core/Box';\nimport { FaItalic } from \"react-icons/fa\";\nimport Image6 from '../../Images/Coverage_Support.png';\nimport { useEffect, useRef } from \"react\";\nimport Image5 from '../../Images/Relative_Frequency_Formula.png';\nimport Image7 from '../../Images/Overlap_Ratio.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Scp_home() {\n  _s();\n\n  const myContext = useContext(AppContext);\n  const [show_content, set_show_content] = useState(0);\n  const [selected_def_for_modal, set_selected_def_for_modal] = useState(\"\");\n  const [show_modal, set_show_modal] = React.useState(false);\n\n  const show_modal_with_def = mincs => {\n    document.getElementById(\"modal\").style.display = \"block\";\n    set_selected_def_for_modal(mincs);\n    set_show_modal(true);\n  };\n\n  var modal = document.getElementById('modal');\n\n  window.onclick = function (event) {\n    if (event.target == modal) {\n      modal.style.display = \"none\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: myContext.side ? \"scp_main_div_shrink\" : \"scp_main_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_heading\",\n        children: \"Subgraph Coverage Patterns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"scp_horizontal_line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: myContext.side ? \"scp_content\" : \"scp_content_expand\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first_para\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pattern mining from Graph Transactional Data (\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"GTD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 71\n          }, this), ' ', \") is an active area of research with applications in the domains of bioinformatics, chemical informatics and social networks.\", ' ', \"Existing works address the problem of mining frequent subgraphs from \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"GTD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 63\n          }, this), \".\", ' ', \"However,\", ' ', \"the knowledge concerning the coverage aspect of a set of subgraphs is also valuable for improving the performance of several applications.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: show_content ? /*#__PURE__*/_jsxDEV(Box, {\n            className: \"box1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown_heading\",\n              children: [\"Contents [\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"show_hide\",\n                onClick: () => set_show_content(!show_content),\n                children: \"Hide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 69\n              }, this), \" ] \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list_of_contents\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#def\",\n                  children: \"1. Definiton\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#example\",\n                  children: \"2. Example\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#framework\",\n                  children: \"3. SIFT Framework\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#references\",\n                  children: \"4. References\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            className: \"box1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown_heading\",\n              children: [\"Contents [\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"show_hide\",\n                onClick: () => set_show_content(!show_content),\n                children: \"Show\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 69\n              }, this), \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition_heading\",\n        id: \"def\",\n        children: \"Definition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Given a graph transactional dataset and user defined constraints \", /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => {\n              show_modal_with_def(\"minrf\");\n            },\n            className: \"def\",\n            children: [\"minimum Relative Frequency\", ' ', \"(\", ' ', \"minRF\", ' ', \")\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 89\n          }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => {\n              show_modal_with_def(\"mincs\");\n            },\n            className: \"def\",\n            children: [\"minimum Coverage Support\", ' ', \"(\", ' ', \"minCS\", ' ', \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 216\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => {\n              show_modal_with_def(\"maxor\");\n            },\n            className: \"def\",\n            children: [\"maximum Overlap Ratio\", ' ', \"(\", ' ', \"maxOR\", ' ', \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 335\n          }, this), \",\", ' ', \"a set of subgraphs say \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"SP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 475\n          }, this), \" \", '  ', \"is called Subgraph Coverage Pattern if \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Coverage Support of SP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 50\n          }, this), \" \", \">=\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"minCS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 87\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Relative Frequency of SP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 104\n          }, this), ' ', \" \", \">=\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"minRF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 148\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Overlap Ratio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 165\n          }, this), \" \", \"<=\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"maxOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 193\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: show_modal ? \"def_modal\" : \"display_none\",\n        id: \"modal\",\n        children: selected_def_for_modal == \"mincs\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"def_modal_content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: () => set_show_modal(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"box_def\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box_heading_def\",\n                children: \"Coverage Support\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_definition_def\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"para\",\n                  children: [\"Given Graph Transactional Dataset \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: \"D\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 87\n                  }, this), \" and a subgraph pattern \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: \"SP\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 119\n                  }, this), \",\", ' ', \"the coverage support of \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: [\"SP (\", ' ', \"CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                      children: \"g\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 172\n                    }, this), \" (SP, D)\", ' ', \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 158\n                  }, this), \" is the percentage of graph transactions in \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: \"D\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 53\n                  }, this), \" covered by at least one subgraph in\", /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: \"SP\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 38\n                  }, this), \" .\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"para\",\n                  children: [\"Here, 0 \\u2264 CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 65\n                  }, this), \" (SP, D) \\u2264 1\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"para\",\n                  children: [\"CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 55\n                  }, this), \" (SP, D) = 1 when all of the graph transactions in D are covered by SP . Conversely, CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 59\n                  }, this), \" (SP, D) = 0 when none of the graph transactions are covered by SP.A pattern SP is interesting with respect to coverage point of view if CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 42\n                  }, this), \" (SP, D) \\u2265 minCS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 70\n                  }, this), \" , where minCS g is a userdefined minimum Coverage Support threshold for graph transactions.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"scp_definition_heading\",\n                  id: \"example\",\n                  children: \"Example\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scp_definition\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"terms_example_image\",\n                  src: Image6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"terms_image_name\",\n                  children: \"Fig. 1: Formula for Coverage Support of a Subgraph Pattern SP in D \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_example_definition_def\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: Image,\n                className: \"example_image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image_name\",\n                children: \"Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"para_down_example_def\",\n                children: [\"Consider graph transactional dataset D comprising of 10 graph transactions G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 109\n                }, this), \" to G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 34\n                }, this), \" , shown in Figure 2(a). Three subgraphs S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 89\n                }, this), \" , S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 105\n                }, this), \" and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 34\n                }, this), \" are shown in Figure 2(b). Let Subgraph Pattern SP = \", \"{\", \" S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 106\n                }, this), \",S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 120\n                }, this), \",\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 133\n                }, this), \" \", \"}\", \" .Here, S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 160\n                }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 34\n                }, this), \", G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 49\n                }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 67\n                }, this), \" ; S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 84\n                }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 115\n                }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 131\n                }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 149\n                }, this), \" ; and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 34\n                }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 65\n                }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 83\n                }, this), \" . The subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 112\n                }, this), \" is said to cover G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 43\n                }, this), \" since S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 63\n                }, this), \" \\u2286 G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 79\n                }, this), \" . Hence, cover(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 108\n                }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 124\n                }, this), \" )=1. Moreover, |CSet(SP , D)| / |D| = |\", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 73\n                }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 89\n                }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 105\n                }, this), \"}\", \" \\u222A \", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 132\n                }, this), \" ,G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 147\n                }, this), \",G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 162\n                }, this), \" \", \"}\", \" \\u222A \", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 189\n                }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 205\n                }, this), \"}\", \" | = 8 /10 = 0.8.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: selected_def_for_modal == \"minrf\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"def_modal_content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: () => set_show_modal(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"box_def\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box_heading_def\",\n                children: \"Relative Frequency of a Subgraph\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_definition_def\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"para\",\n                  children: [\"Given Graph Transactional Data D and a subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"j\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 102\n                  }, this), \" , we denote the percentage of graph transactions in D covered by S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"j\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 67\n                  }, this), \" as Relative Frequency. Formula for computing Relative Frequency of Subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"j\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 91\n                  }, this), \" in D is shown in figure 1.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"para\",\n                  children: [\"Here, 0 \\u2264 RF\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 65\n                  }, this), \" (S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"j\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 80\n                  }, this), \" ,D) \\u2264 1. We can extract subgraphs of interest from D based on user-specified minRF\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"g\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 82\n                  }, this), \" threshold.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"scp_definition_heading\",\n                  id: \"example\",\n                  children: \"Example\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scp_definition\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"terms_example_image\",\n                  src: Image5\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"terms_image_name\",\n                  children: [\"Fig. 1: Formula for Relative Frequency of Subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"j\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 89\n                  }, this), \" in D\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_example_definition_def\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: Image,\n                className: \"example_image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image_name\",\n                children: \"Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"para_down_example_def\",\n                children: [\"Consider graph transactional dataset D comprising of 10 graph transactions G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 113\n                }, this), \" to G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 38\n                }, this), \" , shown in Figure 2(a). Three subgraphs S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 93\n                }, this), \" , S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 109\n                }, this), \" and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 38\n                }, this), \" are shown in Figure 2(b). Here, S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 84\n                }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 38\n                }, this), \", G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 53\n                }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 71\n                }, this), \" ; S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 88\n                }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 119\n                }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 135\n                }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 153\n                }, this), \" ; and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 38\n                }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 69\n                }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 87\n                }, this), \" . The subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 116\n                }, this), \" is said to cover G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 47\n                }, this), \" since S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 67\n                }, this), \" \\u2286 G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 83\n                }, this), \" . Hence, cover(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 112\n                }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 128\n                }, this), \" )=1. Moreover, CSet(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 53\n                }, this), \" , D) = \", \"{G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 79\n                }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 95\n                }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 111\n                }, this), \" and RF\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"g\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 131\n                }, this), \" (S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 146\n                }, this), \" , D) = |Cset(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 173\n                }, this), \")|/D = 3/10 = 0.3. Similarly RF values of S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 61\n                }, this), \" , S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 38\n                }, this), \" are 0.3 and 0.2 respectively\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"def_modal_content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: () => set_show_modal(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"box_def\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box_heading_def\",\n                children: \"Overlap Ratio of a Pattern X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_definition_def\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"para\",\n                  children: [\"Let X = \", \"{\", \"O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"p\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 67\n                  }, this), \" , O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"q\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 83\n                  }, this), \" ,. . . , O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"r\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 106\n                  }, this), \" , O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"s\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 122\n                  }, this), \" \", \"}\", \" be a pattern such that RF (O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"p\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 42\n                  }, this), \" ) \\u2265 RF (O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"q\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 64\n                  }, this), \") \\u2265 \\xB7 \\xB7 \\xB7 \\u2265 RF (O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"r\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 93\n                  }, this), \" ) \\u2265 RF (O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"s\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 115\n                  }, this), \"). (Here, the notations O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"p\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 52\n                  }, this), \" , O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"q\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 68\n                  }, this), \" , O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"r\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 84\n                  }, this), \", and O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"s\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 103\n                  }, this), \" represent Subgraph IDs.) The overlap ratio of a pattern X is defined as the ratio of the number of transactions common in CSet(X \\u2212\", \"{\", \"O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"s\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 88\n                  }, this), \"}\", \") and CSet(O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"s\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 47\n                  }, this), \") to CSet(O\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"s\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 70\n                  }, this), \").It is defined as shown in figure 1.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"para\",\n                  children: \"For a pattern X, 0 \\u2264 OR(X) \\u2264 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"para\",\n                  children: \"A pattern X is interesting if OR(X) \\u2264 maxOR, where maxOR is a user-defined maximum OR threshold.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"scp_definition_heading\",\n                  id: \"example\",\n                  children: \"Example\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scp_definition\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"terms_example_image\",\n                  src: Image7\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"terms_image_name\",\n                  children: \"Fig. 1: Formula for Overlap Ratio of a pattern X.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms_example_definition_def\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: Image,\n                className: \"example_image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image_name\",\n                children: \"Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"para_down_example_def\",\n                children: [\"Consider graph transactional dataset D comprising of 10 graph transactions G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 109\n                }, this), \" to G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 34\n                }, this), \" , shown in Figure 2(a). Three subgraphs S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 89\n                }, this), \" , S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 105\n                }, this), \" and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 34\n                }, this), \" are shown in Figure 2(b). Let Subgraph Pattern SP = \", \"{\", \" S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 106\n                }, this), \",S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 120\n                }, this), \",\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 133\n                }, this), \" \", \"}\", \" .Here, S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 160\n                }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 34\n                }, this), \", G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 49\n                }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 67\n                }, this), \" ; S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 84\n                }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 115\n                }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 131\n                }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 149\n                }, this), \" ; and S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 34\n                }, this), \" is a subgraph of G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 65\n                }, this), \" and G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 83\n                }, this), \" . The subgraph S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 112\n                }, this), \" is said to cover G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 43\n                }, this), \" since S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 63\n                }, this), \" \\u2286 G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 79\n                }, this), \" . Hence, cover(S\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 108\n                }, this), \" , G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 124\n                }, this), \" )=1. Moreover, |CSet(SP , D)| / |D| = |\", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 73\n                }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 89\n                }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 105\n                }, this), \"}\", \" \\u222A \", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 132\n                }, this), \" ,G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 147\n                }, this), \",G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 162\n                }, this), \" \", \"}\", \" \\u222A \", \"{\", \"G\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 189\n                }, this), \" ,G \", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 205\n                }, this), \"}\", \" | = 8 /10 = 0.8.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition_heading\",\n        id: \"example\",\n        children: \"Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Image,\n          className: \"example_image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image_name\",\n          children: \"Fig. 1: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Figure 1.a of above image is the Graph Transactional Dataset consisting of 10 graphs.\", ' ', \"In Figure 2(b),\", ' ', \"let \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"SP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 143\n            }, this), \" be the set \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"{ S1, S2, S3 }\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 164\n            }, this), \".\", ' ', \"The \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"RF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 199\n            }, this), \" values of \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"S1,\", ' ', \"S2 and S3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 219\n            }, this), \" are 0.3,\", ' ', \"0.3 and 0.2 respectively.\", ' ', \"The coverage set of \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"SP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 307\n            }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"CSet(\", ' ', \"SP,\", ' ', \"D\", ' ', \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 322\n            }, this), ' ', \"=\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"{ G1, G4, G5, G6, G7, G8, G10 }\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 34\n            }, this), \".\", ' ', \"The coverage support of \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"SP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 106\n            }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"CS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 127\n              }, this), \" (SP, D) = |\", ' ', \"CSet(SP,D)\", ' ', \"| / |D|\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 121\n            }, this), \" = 7/10 = 0.7.\", ' ', \"The multiset of transactions covered by pattern \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"SP,\", ' ', \"M(\", ' ', \"SP, D\", ' ', \")\", ' ', \"=\", ' ', \"{ ( G1, G6, G10 ), ( G5, G7, G8 ), ( G4, G7 ) }\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 250\n            }, this), \". Therefore, the overlap among transactions covered by subgraphs of \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"SP ,overlap\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 172\n              }, this), ' ', \"(\", ' ', \"SP, D\", ' ', \") = (\", ' ', \"|\", ' ', \"M (SP,D)\", ' ', \"|\", ' ', \"/\", ' ', \"|\", ' ', \"CSet(\", ' ', \"SP,D\", ' ', \")\", ' ', \"|\", ' ', \")\", ' ', \"-\", ' ', \"1\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 157\n            }, this), \" = (8/7)-1 = 0.142.\", ' ', \"Given the values of \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"minRF\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 354\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 345\n            }, this), \" = 0.2, \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"minCS\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 388\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 379\n            }, this), \" = 0.7 and\", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"maxO\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), \" = 0.5, the pattern \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"SP = \", \"{ S1, S2, S3 }\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 74\n            }, this), \" is an SCP.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition_heading\",\n        id: \"framework\",\n        children: \"SIFT Framework\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [\"Subgraph ID based Flat Transactional\", ' ', \"(\", ' ', \"SIFT\", ' ', \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), ' ', \"framework is generalized in the sense that it extracts all potential SCPs from GTD subject to user-specified thresholds of relative frequency, coverage support and overlap.The framework consists of three parts for extracting SCPs from Graph Transactional Dataset.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_and_image\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scp_definition_text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text_para\",\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"tab1\",\n              children: \"                       1.  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 50\n            }, this), \"For extracting subgraphs from D, which satisfies the minRFg constraint, an existing subgraph discovery algorithm, such as gSpan can be employed. We construct the database of\", \" <SID, Clabel>\", \" as the output , where SID is a Subgraph Identifier and Clabe is minimum DFS code assigned as canonical label to subgraph.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text_para\",\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"tab1\",\n              children: \"                       2.  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 50\n            }, this), \"Second, with the database of \", \"<SID, Clabel >\", \"as the input, we form the SID-based flat transactional dataset, where each SID-based flat transaction consists of all SIDs of subgraphs corresponding graph transaction. In this step, we map SIDs to corresponding graph transaction identifier (GID) and form the database of \", \"<GID, SIDs[ ] > \", \" as the output. This forms the SID- based flat transactional dataset.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text_para\",\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"tab1\",\n              children: \"                       3.  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 50\n            }, this), \"Third, after forming the SID-based flat transactional dataset, the problem of extracting candidate SCPs becomes the problem of extracting coverage patterns. Therefore, we can employ an existing coverage pattern mining algorithm to extract SCPs. For efficient extraction of SCPs, we employ a pruning heuristic related to overlap and efficiently extract SCPs subject to the minCSg and minOg constraints.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Image1,\n            className: \"example_image2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition_heading\",\n        id: \"references\",\n        children: \"References\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scp_definition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Scp_home, \"F2wpO5k7nR+raE4C0SmJj2Hw96Q=\");\n\n_c = Scp_home;\nexport default Scp_home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scp_home\");","map":{"version":3,"sources":["/home/mayakuntla/Videos/cp/src/Components/Pages/Scp_home.js"],"names":["useContext","useState","React","AppContext","Link","Image","Image1","Box","FaItalic","Image6","useEffect","useRef","Image5","Image7","Scp_home","myContext","show_content","set_show_content","selected_def_for_modal","set_selected_def_for_modal","show_modal","set_show_modal","show_modal_with_def","mincs","document","getElementById","style","display","modal","window","onclick","event","target","side"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport React from 'react';\nimport AppContext from '../App_context';\nimport './Scp_home.css';\nimport { Link } from 'react-router-dom';\nimport Image from '../../Images/Graph_transaction.jpg';\nimport Image1 from '../../Images/SIFT_framework.png';\nimport Box from '@material-ui/core/Box';\nimport { FaItalic } from \"react-icons/fa\";\nimport Image6 from '../../Images/Coverage_Support.png';\nimport { useEffect, useRef} from \"react\";\nimport Image5 from '../../Images/Relative_Frequency_Formula.png';\nimport Image7 from '../../Images/Overlap_Ratio.png';\n\n\nfunction Scp_home() {\n    const myContext = useContext(AppContext);\n    const [show_content,set_show_content]= useState(0);\n    const [selected_def_for_modal,set_selected_def_for_modal]=useState(\"\");\n    const [show_modal,set_show_modal]=React.useState(false);\n    const show_modal_with_def=(mincs)=>{\n        document.getElementById(\"modal\").style.display=\"block\";\n        set_selected_def_for_modal(mincs);\n        set_show_modal(true);\n    }\n    var modal = document.getElementById('modal');\n    window.onclick = function(event)\n    {\n        if (event.target == modal)\n        {\n            modal.style.display = \"none\";\n        }\n    }\n    \n    return (\n        <>\n        \n        <div className={myContext.side ? \"scp_main_div_shrink\" : \"scp_main_div\"}>\n            <div className=\"scp_heading\">\n                Subgraph Coverage Patterns\n            </div>\n            <hr className=\"scp_horizontal_line\"/>\n        </div>\n            <div className={myContext.side ? \"scp_content\" : \"scp_content_expand\"}>\n                <div className=\"first_para\">\n                <p>Pattern mining from Graph Transactional Data ({' '}<i>GTD</i>{' '}) is an active area of research with applications in the domains of bioinformatics, chemical informatics and social networks.{' '}Existing works address \n                the problem of mining frequent subgraphs from <i>GTD</i>.{' '}However,{' '}the knowledge concerning the coverage aspect of a set of subgraphs is also valuable for improving the performance of several applications.</p>\n                </div>\n                <div className=\"scp_definition\">\n                    <div>\n                    {show_content ? <Box className=\"box1\">\n                        <div className=\"dropdown_heading\">Contents [<div className=\"show_hide\" onClick={()=>set_show_content(!show_content)}>Hide</div> ] </div>\n                        <div className=\"list_of_contents\">\n                            <div><a href=\"#def\">1. Definiton</a></div>\n                            <div><a href=\"#example\">2. Example</a></div>\n                            <div><a href=\"#framework\">3. SIFT Framework</a></div>\n                            <div><a href=\"#references\">4. References</a></div>\n                        </div>\n                    \n                    </Box> :\n                    <Box className=\"box1\">\n                        <div className=\"dropdown_heading\">Contents [<div className=\"show_hide\" onClick={()=>set_show_content(!show_content)}>Show</div>]</div>\n                    </Box>}\n                    </div>\n                </div>\n                <div className=\"scp_definition_heading\" id=\"def\">\n                    Definition\n                </div>\n                <div className=\"scp_definition\">\n                    <p>Given a graph transactional dataset and user defined constraints <i onClick={()=>{show_modal_with_def(\"minrf\")}} className=\"def\">minimum Relative Frequency{' '}({' '}minRF{' '}){' '}</i>,{' '}<i onClick={()=>{show_modal_with_def(\"mincs\")}} className=\"def\">minimum Coverage Support{' '}({' '}minCS{' '})</i> and <i onClick={()=>{show_modal_with_def(\"maxor\")}} className=\"def\">maximum Overlap Ratio{' '}({' '}maxOR{' '})</i>,{' '}a set of subgraphs say <i>SP</i> {'  '}is called \n                    Subgraph Coverage Pattern if <i>Coverage Support of SP</i> {\">=\"} <i>minCS</i> and <i>Relative Frequency of SP</i>{' '} {\">=\"} <i>minRF</i> and <i>Overlap Ratio</i> {\"<=\"} <i>maxOR</i>.</p>\n                </div>\n                <div className={show_modal ? \"def_modal\" : \"display_none\"} id=\"modal\" >\n                    {selected_def_for_modal==\"mincs\" ?<>\n                    <div className=\"def_modal_content\">\n                        <span className=\"close\" onClick={()=>set_show_modal(false)} >&times;</span>\n                        <Box className=\"box_def\">\n                            <div className=\"box_heading_def\">\n                                Coverage Support\n                            </div>\n                        </Box>\n                        <div className=\"terms_definition_def\">\n                            <div>\n                                <p className=\"para\">Given Graph Transactional Dataset <i>D</i> and a subgraph pattern <i>SP</i>,{' '}the coverage support of <i>SP ({' '}CS<sub>g</sub> (SP, D){' '})</i> is the percentage of graph\n                                    transactions in <i>D</i> covered by at least one subgraph in\n                                     <i>SP</i> .\n                                </p>\n                                <p className=\"para\">Here, 0 ≤ CS<sub>g</sub> (SP, D) ≤ 1</p>\n                                <p className=\"para\">CS<sub>g</sub> (SP, D) = 1\n                                    when all of the graph transactions in D are covered\n                                    by SP . Conversely, CS<sub>g</sub> (SP, D) = 0 when none of the\n                                    graph transactions are covered by SP.A pattern SP is interesting with respect to coverage point of view\n                                    if CS<sub>g</sub> (SP, D) ≥ minCS<sub>g</sub> , where minCS g is a userdefined minimum Coverage Support threshold for graph\n                                    transactions. \n                                </p>\n                                <div className=\"scp_definition_heading\" id=\"example\">\n                                    Example\n                                </div>\n                            </div>\n                            <div className=\"scp_definition\">\n                                <img className=\"terms_example_image\" src={Image6}></img>\n                                <div className=\"terms_image_name\">Fig. 1: Formula for Coverage Support of a Subgraph Pattern SP in D </div>\n                            </div>\n                        </div>\n                        <div className=\"terms_example_definition_def\">\n                            <img src={Image} className=\"example_image\"></img>\n                            <div className=\"image_name\">\n                                Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2.\n                            </div>\n                            <p className=\"para_down_example_def\">\n                                Consider graph transactional dataset D comprising of 10 graph transactions G<sub>1</sub> to\n                                G<sub>10</sub> , shown in Figure 2(a). Three subgraphs S<sub>1</sub> , S<sub>2</sub> and\n                                S<sub>3</sub> are shown in Figure 2(b). Let Subgraph Pattern SP = {\"{\"} S<sub>1</sub>,S<sub>2</sub>,<sub>3</sub> {\"}\"} .Here, S<sub>1</sub> is a subgraph of\n                                G<sub>1</sub>, G<sub>6</sub> and G<sub>10</sub> ; S<sub>2</sub> is a subgraph of G<sub>5</sub> , G<sub>7</sub> and G<sub>8</sub> ; and\n                                S<sub>3</sub> is a subgraph of G<sub>4</sub> and G<sub>7</sub> . The subgraph S<sub>1</sub> is said\n                                to cover G<sub>1</sub> since S<sub>1</sub> ⊆ G<sub>1</sub> . Hence, cover(S<sub>1</sub> , G<sub>1</sub> )=1.\n                                Moreover, |CSet(SP , D)| / |D| = |{\"{\"}G<sub>1</sub> ,G <sub>6</sub> ,G <sub>10</sub>{\"}\"} ∪ {\"{\"}G<sub>5</sub> ,G<sub>7</sub>,G <sub>8</sub> {\"}\"} ∪ {\"{\"}G<sub>4</sub> ,G <sub>7</sub>{\"}\"} | = 8 /10 = 0.8.\n                            </p>\n                        </div>\n                    </div></> :<>\n                    {selected_def_for_modal==\"minrf\" ? \n                    <div className=\"def_modal_content\">\n                        <span className=\"close\" onClick={()=>set_show_modal(false)} >&times;</span>\n                        <Box className=\"box_def\">\n                            <div className=\"box_heading_def\">\n                                Relative Frequency of a Subgraph\n                            </div>\n                        </Box>\n                        <div className=\"terms_definition_def\">\n                            <div>\n                                <p className=\"para\">Given Graph Transactional Data D and a subgraph S<sub>j</sub> , we denote the percentage of graph\n                                    transactions in D covered by S<sub>j</sub> as Relative Frequency.\n                                    Formula for computing Relative Frequency of Subgraph S<sub>j</sub> in D is shown in figure 1.\n                                </p>\n                                <p className=\"para\">Here, 0 ≤ RF<sub>g</sub> (S<sub>j</sub> ,D) ≤ 1. We can extract subgraphs of\n                                    interest from D based on user-specified minRF<sub>g</sub> threshold.\n                                </p>\n                                <div className=\"scp_definition_heading\" id=\"example\">\n                                    Example\n                                </div>\n                            </div>\n                            <div className=\"scp_definition\">\n                                <img className=\"terms_example_image\" src={Image5}></img>\n                                <div className=\"terms_image_name\">\n                                    Fig. 1: Formula for Relative Frequency of Subgraph S<sub>j</sub> in D \n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"terms_example_definition_def\">\n                            <img src={Image} className=\"example_image\"></img>\n                                <div className=\"image_name\">\n                                    Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2\n                                </div>\n                                <p className=\"para_down_example_def\">\n                                    Consider graph transactional dataset D comprising of 10 graph transactions G<sub>1</sub> to\n                                    G<sub>10</sub> , shown in Figure 2(a). Three subgraphs S<sub>1</sub> , S<sub>2</sub> and\n                                    S<sub>3</sub> are shown in Figure 2(b). Here, S<sub>1</sub> is a subgraph of\n                                    G<sub>1</sub>, G<sub>6</sub> and G<sub>10</sub> ; S<sub>2</sub> is a subgraph of G<sub>5</sub> , G<sub>7</sub> and G<sub>8</sub> ; and\n                                    S<sub>3</sub> is a subgraph of G<sub>4</sub> and G<sub>7</sub> . The subgraph S<sub>1</sub> is said\n                                    to cover G<sub>1</sub> since S<sub>1</sub> ⊆ G<sub>1</sub> . Hence, cover(S<sub>1</sub> , G<sub>1</sub> )=1.\n                                    Moreover, CSet(S<sub>1</sub> , D) = {\"{G\"}<sub>1</sub> ,G <sub>6</sub> ,G <sub>10</sub> and RF<sub>g</sub> (S<sub>1</sub> , D) = |Cset(S<sub>1</sub>)|/D = 3/10 = 0.3.\n                                    Similarly RF values of S<sub>2</sub> ,\n                                    S<sub>3</sub> are 0.3 and 0.2 respectively\n                                </p>\n                        </div>\n                    </div> :\n                    <div className=\"def_modal_content\">\n                        <span className=\"close\" onClick={()=>set_show_modal(false)} >&times;</span>\n                        <Box className=\"box_def\" >\n                            <div className=\"box_heading_def\">\n                                Overlap Ratio of a Pattern X\n                            </div>\n                        </Box>\n                        <div className=\"terms_definition_def\">\n                            <div>\n                                <p className=\"para\">Let X = {\"{\"}O<sub>p</sub> , O<sub>q</sub> ,. . . , O<sub>r</sub> , O<sub>s</sub> {\"}\"} be a pattern such that\n                                    RF (O<sub>p</sub> ) ≥ RF (O<sub>q</sub>) ≥ · · · ≥ RF (O<sub>r</sub> ) ≥ RF (O<sub>s</sub>). (Here,\n                                    the notations O<sub>p</sub> , O<sub>q</sub> , O<sub>r</sub>, and O<sub>s</sub> represent Subgraph IDs.) The\n                                    overlap ratio of a pattern X is defined as the ratio of\n                                    the number of transactions common in CSet(X −{\"{\"}O<sub>s</sub>{\"}\"})\n                                    and CSet(O<sub>s</sub>) to CSet(O<sub>s</sub>).It is defined as shown in figure 1.\n                                </p>\n                                <p className=\"para\">\n                                    For a pattern X, 0 ≤ OR(X) ≤ 1\n                                </p>\n                                <p className=\"para\">\n                                    A pattern X\n                                    is interesting if OR(X) ≤ maxOR, where maxOR is\n                                    a user-defined maximum OR threshold.\n                                </p>\n                                <div className=\"scp_definition_heading\" id=\"example\">\n                                    Example\n                                </div>\n         \n                            </div>\n                            <div className=\"scp_definition\">\n                                <img className=\"terms_example_image\" src={Image7}></img>\n                                <div className=\"terms_image_name\">\n                                    Fig. 1: Formula for Overlap Ratio of a pattern X.\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"terms_example_definition_def\">\n                            <img src={Image} className=\"example_image\"></img>\n                            <div className=\"image_name\">\n                                Fig. 2: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2\n                            </div>\n                            <p className=\"para_down_example_def\">\n                                Consider graph transactional dataset D comprising of 10 graph transactions G<sub>1</sub> to\n                                G<sub>10</sub> , shown in Figure 2(a). Three subgraphs S<sub>1</sub> , S<sub>2</sub> and\n                                S<sub>3</sub> are shown in Figure 2(b). Let Subgraph Pattern SP = {\"{\"} S<sub>1</sub>,S<sub>2</sub>,<sub>3</sub> {\"}\"} .Here, S<sub>1</sub> is a subgraph of\n                                G<sub>1</sub>, G<sub>6</sub> and G<sub>10</sub> ; S<sub>2</sub> is a subgraph of G<sub>5</sub> , G<sub>7</sub> and G<sub>8</sub> ; and\n                                S<sub>3</sub> is a subgraph of G<sub>4</sub> and G<sub>7</sub> . The subgraph S<sub>1</sub> is said\n                                to cover G<sub>1</sub> since S<sub>1</sub> ⊆ G<sub>1</sub> . Hence, cover(S<sub>1</sub> , G<sub>1</sub> )=1.\n                                Moreover, |CSet(SP , D)| / |D| = |{\"{\"}G<sub>1</sub> ,G <sub>6</sub> ,G <sub>10</sub>{\"}\"} ∪ {\"{\"}G<sub>5</sub> ,G<sub>7</sub>,G <sub>8</sub> {\"}\"} ∪ {\"{\"}G<sub>4</sub> ,G <sub>7</sub>{\"}\"} | = 8 /10 = 0.8.\n                            </p>\n                        </div>\n                    </div>}\n                    </>}\n                </div>\n                <div className=\"scp_definition_heading\" id=\"example\">\n                    Example\n                </div>\n                <div className=\"scp_definition\">\n                    <img src={Image} className=\"example_image\"></img>\n                    <div className=\"image_name\">Fig. 1: (a) Sample of 10 graph transactions, (b) Candidate subgraphs with minRF g =0.2</div>\n                    <div>\n                        <p>\n                            Figure 1.a of above image is the Graph Transactional Dataset consisting of 10 graphs.{' '}In Figure 2(b),{' '}let <i>SP</i> be the set <i>{\"{ S1, S2, S3 }\"}</i>.{' '}The <i>RF</i> values of <i>S1,{' '}S2 and S3</i> are 0.3,{' '}0.3 and 0.2 respectively.{' '}The coverage set of <i>SP</i>,{' '}<i>CSet({' '}SP,{' '}D{' '})</i>{' '}=\n                            {' '}<i>{\"{ G1, G4, G5, G6, G7, G8, G10 }\"}</i>.{' '}The coverage support of <i>SP</i>,{' '}<i>CS{<sub>g</sub>} (SP, D) = |{' '}CSet(SP,D){' '}| / |D|</i> = 7/10 = 0.7.{' '}The multiset of transactions covered by pattern <i>SP,{' '}M({' '}SP, D{' '}){' '}=\n                            {' '}{\"{ ( G1, G6, G10 ), ( G5, G7, G8 ), ( G4, G7 ) }\"}</i>. Therefore, the overlap among transactions covered by subgraphs of <i>SP ,overlap{<sub>g</sub>}{' '}({' '}SP, D{' '}) = ({' '}|{' '}M (SP,D){' '}|{' '}/{' '}|{' '}CSet({' '}SP,D{' '}){' '}|{' '}){' '}-{' '}1</i> = (8/7)-1 = 0.142.{' '}Given the values of <i>minRF{<sub>g</sub>}</i> = 0.2, <i>minCS{<sub>g</sub>}</i> = 0.7 and \n                            <i>maxO{<sub>g</sub>}</i> = 0.5, the pattern <i>SP = {\"{ S1, S2, S3 }\"}</i> is an SCP.\n                        </p>\n                    </div>\n                </div>\n                <div className=\"scp_definition_heading\" id=\"framework\">\n                    SIFT Framework\n                </div>\n                <div className=\"scp_definition\">\n                    <p>\n                        <b><i>Subgraph ID based Flat Transactional{' '}({' '}SIFT{' '})</i></b>{' '}framework is generalized in the sense that\n                        it extracts all potential SCPs from GTD subject to\n                        user-specified thresholds of relative frequency, coverage\n                        support and overlap.The framework consists of three parts for extracting SCPs from Graph Transactional Dataset.\n                    </p>\n                </div>\n                <div className=\"text_and_image\">\n                    <div className=\"scp_definition_text\">\n                        <p className=\"text_para\"><pre className=\"tab1\">                       1.  </pre>For extracting subgraphs from D, which satisfies\n\n                        the minRFg constraint, an existing subgraph discovery algorithm, such as gSpan can be employed. We construct the database of \n                        {\" <SID, Clabel>\"} as the output , where SID is a Subgraph Identifier and Clabe is minimum DFS code assigned as canonical label to subgraph.\n                        </p>\n                        <p className=\"text_para\"><pre className=\"tab1\">                       2.  </pre>Second, with the database of {\"<SID, Clabel >\"}\nas the input, we form the SID-based flat transactional\ndataset, where each SID-based flat transaction consists\nof all SIDs of subgraphs corresponding graph transaction. In this step, we map SIDs to corresponding graph\ntransaction identifier (GID) and form the database of {\"<GID, SIDs[ ] > \"} as the output. This forms the SID-\nbased flat transactional dataset.\n                        </p>\n                        <p className=\"text_para\"><pre className=\"tab1\">                       3.  </pre>Third, after forming\nthe SID-based flat transactional dataset, the problem of\nextracting candidate SCPs becomes the problem of extracting coverage patterns. Therefore, we can employ an\nexisting coverage pattern mining algorithm to extract SCPs. For efficient extraction of SCPs, we employ\na pruning heuristic related to overlap and efficiently\nextract SCPs subject to the minCSg and minOg constraints.\n                        </p>\n                    </div>\n                    <div>\n                        <img src={Image1} className=\"example_image2\"></img>\n                    </div>\n                </div>\n                <div className=\"scp_definition_heading\" id=\"references\">\n                    References\n                </div>\n                <div className=\"scp_definition\">\n\n                </div>\n            </div>\n            \n        </>\n  );\n}\n\nexport default Scp_home;"]},"metadata":{},"sourceType":"module"}